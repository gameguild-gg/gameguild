// This file is auto-generated by @hey-api/openapi-ts

export type AccessLevel = 0 | 1 | 2 | 5 | 6;

export type Achievement = {
  id?: string;
  createdAt?: string;
  updatedAt?: string;
  rowVersion?: string | null;
  isDeleted?: boolean;
  deletedAt?: string | null;
  name: string;
  description?: string | null;
  category: string;
  type: string;
  iconUrl?: string | null;
  color?: string | null;
  points?: number;
  isActive?: boolean;
  isSecret?: boolean;
  isRepeatable?: boolean;
  conditions?: string | null;
  displayOrder?: number;
  tenantId?: string | null;
  userAchievements?: Array<UserAchievement> | null;
  levels?: Array<AchievementLevel> | null;
  prerequisites?: Array<AchievementPrerequisite> | null;
};

export type AchievementDto = {
  id?: string;
  name?: string | null;
  description?: string | null;
  category?: string | null;
  type?: string | null;
  iconUrl?: string | null;
  color?: string | null;
  points?: number;
  isActive?: boolean;
  isSecret?: boolean;
  isRepeatable?: boolean;
  conditions?: string | null;
  displayOrder?: number;
  createdAt?: string;
  updatedAt?: string;
  levels?: Array<AchievementLevelDto> | null;
  prerequisites?: Array<AchievementDto> | null;
};

export type AchievementLevel = {
  id?: string;
  createdAt?: string;
  updatedAt?: string;
  rowVersion?: string | null;
  isDeleted?: boolean;
  deletedAt?: string | null;
  achievementId?: string;
  achievement?: Achievement;
  level?: number;
  name: string;
  description?: string | null;
  requiredProgress?: number;
  points?: number;
  iconUrl?: string | null;
  color?: string | null;
};

export type AchievementLevelDto = {
  id?: string;
  level?: number;
  name?: string | null;
  description?: string | null;
  requiredProgress?: number;
  points?: number;
  iconUrl?: string | null;
  color?: string | null;
};

export type AchievementPopularityDto = {
  achievementId?: string;
  name?: string | null;
  timesEarned?: number;
  earnRate?: number;
};

export type AchievementPrerequisite = {
  id?: string;
  createdAt?: string;
  updatedAt?: string;
  rowVersion?: string | null;
  isDeleted?: boolean;
  deletedAt?: string | null;
  achievementId?: string;
  achievement?: Achievement;
  prerequisiteAchievementId?: string;
  prerequisiteAchievement?: Achievement;
  requiresCompletion?: boolean;
  minimumLevel?: number | null;
};

export type AchievementPrerequisiteCheckDto = {
  achievementId?: string;
  canEarn?: boolean;
  prerequisites?: Array<PrerequisiteStatusDto> | null;
};

export type AchievementProgress = {
  id?: string;
  createdAt?: string;
  updatedAt?: string;
  rowVersion?: string | null;
  isDeleted?: boolean;
  deletedAt?: string | null;
  userId?: string | null;
  user?: User;
  achievementId?: string;
  achievement?: Achievement;
  currentProgress?: number;
  targetProgress?: number;
  lastUpdated?: string;
  isCompleted?: boolean;
  context?: string | null;
  tenantId?: string | null;
};

export type AchievementProgressDto = {
  id?: string;
  userId?: string;
  achievementId?: string;
  achievement?: AchievementDto;
  currentProgress?: number;
  targetProgress?: number;
  readonly progressPercentage?: number;
  lastUpdated?: string;
  isCompleted?: boolean;
  context?: string | null;
};

export type AchievementStatisticsDto = {
  achievementId?: string;
  totalEarned?: number;
  totalUsers?: number;
  inProgress?: number;
  completionRate?: number;
  firstEarned?: string | null;
  lastEarned?: string | null;
  totalAchievements?: number;
  activeAchievements?: number;
  secretAchievements?: number;
  repeatableAchievements?: number;
  usersWithAchievements?: number;
  totalAchievementsAwarded?: number;
  achievementsByCategory?: {
    [key: string]: number;
  } | null;
  achievementsByType?: {
    [key: string]: number;
  } | null;
  mostEarnedAchievements?: Array<AchievementPopularityDto> | null;
  rarestAchievements?: Array<AchievementPopularityDto> | null;
};

export type AchievementsPageDto = {
  achievements?: Array<AchievementDto> | null;
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
};

export type ActivityGrade = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  contentInteractionId?: string;
  graderProgramUserId?: string;
  grade?: number;
  feedback?: string | null;
  gradingDetails?: string | null;
  gradedAt?: string;
  contentInteraction?: ContentInteraction;
  graderProgramUser?: ProgramUser;
};

export type ActivityGradeDto = {
  id?: string;
  contentInteractionId?: string;
  graderProgramUserId?: string;
  grade?: number;
  feedback?: string | null;
  gradingDetails?: string | null;
  gradedAt?: string;
  createdAt?: string;
  updatedAt?: string;
  contentInteraction?: ContentInteractionSummaryDto;
  grader?: GraderSummaryDto;
  readonly isPassingGrade?: boolean;
  readonly gradePercentage?: string | null;
  readonly hasFeedback?: boolean;
  readonly hasGradingDetails?: boolean;
};

export type AddCollaboratorRequest = {
  email?: string | null;
  permissions?: Array<PermissionType> | null;
  expiresAt?: string | null;
  message?: string | null;
  requireAcceptance?: boolean;
};

export type AddUserToGroupDto = {
  userId: string;
  userGroupId: string;
  isAutoAssigned?: boolean;
};

export type ArchiveProjectResult = {
  success?: boolean;
  project?: Project;
  error?: string | null;
};

export type AssignRoleRequest = {
  userId?: string;
  tenantId?: string | null;
  module?: ModuleType;
  roleName?: string | null;
  constraints?: Array<PermissionConstraint> | null;
  expiresAt?: string | null;
};

export type AssignTestingLabRoleRequest = {
  userId?: string;
  tenantId?: string | null;
  roleName?: string | null;
  constraints?: Array<PermissionConstraint> | null;
  expiresAt?: string | null;
};

export type AttendanceStatus = 0 | 1 | 2 | 3;

export type AutoAssignUserDto = {
  userId: string;
  email: string;
  emailDomain: string;
  tenantId: string;
};

export type AutoAssignUsersDto = {
  userIds?: Array<string> | null;
  userEmails?: Array<string> | null;
  tenantId?: string | null;
  forceReassignment?: boolean;
};

export type AwardAchievementRequest = {
  userId?: string;
  level?: number | null;
  progress?: number;
  maxProgress?: number;
  context?: string | null;
  notifyUser?: boolean;
};

export type BulkAwardAchievementRequest = {
  userIds?: Array<string> | null;
  userCriteria?: string | null;
  context?: string | null;
  notifyUsers?: boolean;
};

export type BulkDeleteTenantsDto = {
  tenantIds: Array<string>;
};

export type BulkOperationResult = {
  totalRequested?: number;
  successful?: number;
  failed?: number;
  readonly errors?: Array<string> | null;
  readonly isCompletelySuccessful?: boolean;
  readonly isPartiallySuccessful?: boolean;
  readonly isCompletelyFailed?: boolean;
};

export type BulkRestoreTenantsDto = {
  tenantIds: Array<string>;
};

export type CancelPaymentRequest = {
  reason?: string | null;
};

export type CancelPaymentResult = {
  success?: boolean;
  payment?: Payment;
  error?: string | null;
};

export type Certificate = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  name: string;
  description?: string | null;
  type?: CertificateType;
  programId?: string | null;
  productId?: string | null;
  completionPercentage?: number;
  minimumGrade?: number | null;
  requiresFeedback?: boolean;
  requiresRating?: boolean;
  minimumRating?: number | null;
  validityDays?: number | null;
  verificationMethod?: VerificationMethod;
  certificateTemplate?: string | null;
  isActive?: boolean;
  tenantId?: string | null;
  program?: Program;
  product?: Product;
  userCertificates?: Array<UserCertificate> | null;
  certificateTags?: Array<CertificateTag> | null;
};

export type CertificateBlockchainAnchor = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  certificateId?: string;
  blockchainNetwork: string;
  transactionHash: string;
  blockHash?: string | null;
  blockNumber?: number | null;
  contractAddress?: string | null;
  tokenId?: string | null;
  status?: string | null;
  anchoredAt?: string;
  confirmedAt?: string | null;
  certificate?: UserCertificate;
};

export type CertificateStatus = 0 | 1 | 2 | 3;

export type CertificateTag = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  certificateId?: string;
  tagId?: string;
  relationshipType?: CertificateTagRelationshipType;
  certificate?: Certificate;
  tag?: TagProficiency;
};

export type CertificateTagRelationshipType = 0 | 1 | 2;

export type CertificateType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;

export type CloneProgramDto = {
  newTitle?: string | null;
  newDescription?: string | null;
};

export type CompleteContentRequest = {
  programUserId?: string;
  contentId?: string;
};

export type CompletionRatesDto = {
  programId?: string;
  overallCompletionRate?: number;
  contentCompletionRates?: {
    [key: string]: number;
  } | null;
  completionTrends?: Array<CompletionTrendDto> | null;
};

export type CompletionTrendDto = {
  date?: string;
  completedCount?: number;
  totalCount?: number;
  rate?: number;
};

export type Content = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  licenses?: Array<ContentLicense> | null;
  slug?: string | null;
  status?: ContentStatus;
};

export type ContentInteraction = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  programUserId?: string;
  contentId?: string;
  status?: ProgressStatus;
  submissionData?: string | null;
  completionPercentage?: number;
  timeSpentMinutes?: number | null;
  firstAccessedAt?: string | null;
  lastAccessedAt?: string | null;
  completedAt?: string | null;
  submittedAt?: string | null;
  programUser?: ProgramUser;
  content?: ProgramContent;
  activityGrades?: Array<ActivityGrade> | null;
};

export type ContentInteractionDto = {
  id?: string;
  programUserId?: string;
  contentId?: string;
  status?: ProgressStatus;
  submissionData?: string | null;
  completionPercentage?: number;
  timeSpentMinutes?: number | null;
  firstAccessedAt?: string | null;
  lastAccessedAt?: string | null;
  completedAt?: string | null;
  submittedAt?: string | null;
  createdAt?: string;
  updatedAt?: string;
  content?: ContentSummaryDto;
  programUser?: ProgramUserSummaryDto;
  readonly isSubmitted?: boolean;
  readonly isCompleted?: boolean;
  readonly canModify?: boolean;
  readonly durationInMinutes?: number;
};

export type ContentInteractionSummaryDto = {
  id?: string;
  programUserId?: string;
  contentId?: string;
  status?: string | null;
  submittedAt?: string | null;
  content?: ContentSummaryDto;
  student?: StudentSummaryDto;
};

export type ContentLicense = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  url?: string | null;
  contents?: Array<Content> | null;
};

export type ContentProgressDto = {
  contentId?: string;
  title?: string | null;
  status?: ProgressStatus;
  completionPercentage?: number;
  firstAccessedAt?: string | null;
  lastAccessedAt?: string | null;
  completedAt?: string | null;
};

export type ContentReferenceDto = {
  resourceId?: string;
  resourceTitle?: string | null;
  resourceType?: string | null;
  referenceType?: string | null;
  context?: string | null;
};

export type ContentStatsDto = {
  programId?: string;
  totalContent?: number;
  requiredContent?: number;
  optionalContent?: number;
  contentByType?: {
    Page?: number;
    Assignment?: number;
    Questionnaire?: number;
    Discussion?: number;
    Code?: number;
    Challenge?: number;
    Reflection?: number;
    Survey?: number;
  } | null;
  contentByVisibility?: {
    Draft?: number;
    Published?: number;
    Archived?: number;
  } | null;
  topLevelContent?: number;
  nestedContent?: number;
};

export type ContentStatus = 0 | 1 | 2 | 3;

export type ContentSummaryDto = {
  id?: string;
  title?: string | null;
  contentType?: string | null;
  estimatedMinutes?: number | null;
};

export type CreateAchievementCommand = {
  name?: string | null;
  description?: string | null;
  category?: string | null;
  type?: string | null;
  iconUrl?: string | null;
  color?: string | null;
  points?: number;
  isActive?: boolean;
  isSecret?: boolean;
  isRepeatable?: boolean;
  conditions?: string | null;
  displayOrder?: number;
  tenantId?: string | null;
  levels?: Array<CreateAchievementLevelCommand> | null;
  prerequisiteAchievementIds?: Array<string> | null;
};

export type CreateAchievementLevelCommand = {
  level?: number;
  name?: string | null;
  description?: string | null;
  requiredProgress?: number;
  points?: number;
  iconUrl?: string | null;
  color?: string | null;
};

export type CreateActivityGradeDto = {
  contentInteractionId?: string;
  graderProgramUserId?: string;
  grade?: number;
  feedback?: string | null;
  gradingDetails?: string | null;
};

export type CreateContentDto = {
  title?: string | null;
  description?: string | null;
  type?: ProgramContentType;
  body?: string | null;
  sortOrder?: number | null;
  isRequired?: boolean;
  estimatedMinutes?: number | null;
};

export type CreateCredentialDto = {
  userId: string;
  type: string;
  value: string;
  metadata?: string | null;
  expiresAt?: string | null;
  isActive?: boolean;
};

export type CreatePaymentCommand = {
  userId?: string;
  productId?: string | null;
  amount?: number;
  currency?: string | null;
  method?: PaymentMethod;
  description?: string | null;
  tenantId?: string | null;
  metadata?: {
    [key: string]: unknown;
  } | null;
};

export type CreatePaymentRequest = {
  userId?: string | null;
  productId?: string | null;
  amount?: number;
  currency?: string | null;
  method?: PaymentMethod;
  description?: string | null;
  tenantId?: string | null;
  metadata?: {
    [key: string]: unknown;
  } | null;
};

export type CreatePaymentResult = {
  success?: boolean;
  payment?: Payment;
  error?: string | null;
  clientSecret?: string | null;
};

export type CreatePostDto = {
  title?: string | null;
  description?: string | null;
  postType?: string | null;
  visibility?: AccessLevel;
  richContent?: string | null;
  contentReferences?: Array<string> | null;
};

export type CreateProductCommand = {
  name?: string | null;
  description?: string | null;
  shortDescription?: string | null;
  imageUrl?: string | null;
  type?: ProductType;
  isBundle?: boolean;
  creatorId?: string;
  bundleItems?: Array<string> | null;
  referralCommissionPercentage?: number;
  maxAffiliateDiscount?: number;
  affiliateCommissionPercentage?: number;
  visibility?: AccessLevel;
  status?: ContentStatus;
  tenantId?: string | null;
};

export type CreateProductFromProgramDto = {
  name?: string | null;
  description?: string | null;
  basePrice?: number;
  currency?: string | null;
};

export type CreateProgramContentDto = {
  programId: string;
  parentId?: string | null;
  title: string;
  description?: string | null;
  type: ProgramContentType;
  body?: string | null;
  sortOrder?: number;
  isRequired?: boolean;
  gradingMethod?: GradingMethod;
  maxPoints?: number | null;
  estimatedMinutes?: number | null;
  visibility?: Visibility;
};

export type CreateProgramDto = {
  title?: string | null;
  description?: string | null;
  slug?: string | null;
  thumbnail?: string | null;
};

export type CreateProjectRequest = {
  title: string;
  description?: string | null;
  shortDescription?: string | null;
  imageUrl?: string | null;
  repositoryUrl?: string | null;
  websiteUrl?: string | null;
  downloadUrl?: string | null;
  type?: ProjectType;
  categoryId?: string | null;
  visibility?: AccessLevel;
  status?: ContentStatus;
  tags?: Array<string> | null;
};

export type CreateProjectResult = {
  success?: boolean;
  project?: Project;
  error?: string | null;
};

export type CreateRoleRequest = {
  roleName?: string | null;
  description?: string | null;
  permissions?: Array<ModulePermission> | null;
  priority?: number;
};

export type CreateSimpleTestingRequestDto = {
  title: string;
  description?: string | null;
  versionNumber: string;
  downloadUrl?: string | null;
  instructionsType: InstructionType;
  instructionsContent?: string | null;
  instructionsUrl?: string | null;
  feedbackFormContent?: string | null;
  maxTesters?: number | null;
  startDate?: string | null;
  endDate?: string | null;
  teamIdentifier: string;
};

export type CreateSubscriptionDto = {
  subscriptionPlanId?: string;
  paymentMethodId?: string | null;
  externalSubscriptionId?: string | null;
  trialEndsAt?: string | null;
};

export type CreateTenantDomainDto = {
  tenantId: string;
  topLevelDomain: string;
  subdomain?: string | null;
  isMainDomain?: boolean;
  isSecondaryDomain?: boolean;
  userGroupId?: string | null;
};

export type CreateTenantDto = {
  name: string;
  description?: string | null;
  slug: string;
  isActive?: boolean;
};

export type CreateTenantUserGroupDto = {
  name: string;
  description?: string | null;
  tenantId: string;
  parentGroupId?: string | null;
  isActive?: boolean;
  isDefault?: boolean;
};

export type CreateTestingLocationDto = {
  name?: string | null;
  description?: string | null;
  address?: string | null;
  maxTestersCapacity?: number;
  maxProjectsCapacity?: number;
  equipmentAvailable?: string | null;
  status?: LocationStatus;
};

export type CreateTestingRequestDto = {
  projectVersionId: string;
  title: string;
  description?: string | null;
  downloadUrl?: string | null;
  instructionsType: InstructionType;
  instructionsContent?: string | null;
  instructionsUrl?: string | null;
  instructionsFileId?: string | null;
  feedbackFormContent?: string | null;
  maxTesters?: number | null;
  startDate: string;
  endDate: string;
  status: TestingRequestStatus;
};

export type CreateTestingSessionDto = {
  testingRequestId: string;
  locationId: string;
  sessionName: string;
  sessionDate: string;
  startTime: string;
  endTime: string;
  maxTesters: number;
  status: SessionStatus;
  managerUserId: string;
};

export type CreateUserDto = {
  name: string;
  email: string;
  isActive?: boolean;
  initialBalance?: number;
};

export type CreateUserProfileDto = {
  givenName: string;
  familyName: string;
  displayName: string;
  title?: string | null;
  description?: string | null;
  slug?: string | null;
  userId: string;
  tenantId?: string | null;
};

export type Credential = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  userId: string;
  user?: User;
  tenantId?: string | null;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  type: string;
  value: string;
  metadata?: string | null;
  expiresAt?: string | null;
  isActive?: boolean;
  lastUsedAt?: string | null;
  readonly isExpired?: boolean;
  readonly isValid?: boolean;
};

export type CredentialResponseDto = {
  id?: string;
  userId?: string;
  type?: string | null;
  value?: string | null;
  metadata?: string | null;
  expiresAt?: string | null;
  isActive?: boolean;
  lastUsedAt?: string | null;
  readonly isExpired?: boolean;
  readonly isValid?: boolean;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  user?: UserResponseDto;
};

export type DeleteProjectResult = {
  success?: boolean;
  error?: string | null;
};

export type DevelopmentStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;

export type EffectivePermission = {
  permission?: PermissionType;
  isGranted?: boolean;
  source?: PermissionSource;
  sourceDescription?: string | null;
  grantedBy?: string | null;
  grantedAt?: string | null;
  expiresAt?: string | null;
  isInherited?: boolean;
  isExplicit?: boolean;
  priority?: number;
};

export type EngagementMetricsDto = {
  programId?: string;
  dailyActiveUsers?: number;
  weeklyActiveUsers?: number;
  monthlyActiveUsers?: number;
  averageSessionDuration?: string;
  totalSessions?: number;
  retentionRate?: number;
  contentEngagement?: {
    [key: string]: number;
  } | null;
};

export type EnrollmentStatus = 0 | 1 | 2 | 3 | 4 | 5;

export type FeedbackQuality = 1 | 2 | 3;

export type FeedbackRequest = {
  feedbackFormId?: string;
  feedbackData?: string | null;
  testingContext?: TestingContext;
  sessionId?: string | null;
  additionalNotes?: string | null;
};

export type FinancialTransaction = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  fromUserId?: string | null;
  toUserId?: string | null;
  type?: TransactionType;
  amount?: number;
  currency?: string | null;
  status?: TransactionStatus;
  externalTransactionId?: string | null;
  paymentMethodId?: string | null;
  promoCodeId?: string | null;
  platformFee?: number | null;
  processorFee?: number | null;
  netAmount?: number | null;
  description?: string | null;
  metadata?: string | null;
  processedAt?: string | null;
  failedAt?: string | null;
  error?: string | null;
  failureReason?: string | null;
  fromUser?: User;
  toUser?: User;
  paymentMethod?: UserFinancialMethod;
  promoCode?: PromoCode;
  promoCodeUses?: Array<PromoCodeUse> | null;
};

export type GoogleIdTokenRequestDto = {
  idToken?: string | null;
  tenantId?: string | null;
};

export type GradeStatisticsDto = {
  totalGrades?: number;
  averageGrade?: number;
  minGrade?: number;
  maxGrade?: number;
  passingRate?: number;
  readonly averageGradeFormatted?: string | null;
  readonly passingRateFormatted?: string | null;
  readonly hasGrades?: boolean;
};

export type GraderSummaryDto = {
  id?: string;
  userDisplayName?: string | null;
  userEmail?: string | null;
  role?: string | null;
};

export type GradingMethod = 0 | 1 | 2 | 3;

export type GrantAccessRequest = {
  acquisitionType?: ProductAcquisitionType;
  purchasePrice?: number;
  currency?: string | null;
  expiresAt?: string | null;
};

export type IDomainEvent = {
  readonly eventId?: string;
  readonly occurredAt?: string;
  readonly version?: number;
  readonly aggregateId?: string;
  readonly aggregateType?: string | null;
};

export type InstructionType = 0 | 1 | 2;

export type InvitationResult = {
  success?: boolean;
  errorMessage?: string | null;
  invitationId?: string | null;
  userExists?: boolean;
  emailSent?: boolean;
};

export type InvitationStatus = 0 | 1 | 2 | 3 | 4;

export type InviteUserRequest = {
  email?: string | null;
  permissions?: Array<PermissionType> | null;
  expiresAt?: string | null;
  message?: string | null;
  requireAcceptance?: boolean;
};

export type Jam = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  name: string;
  slug: string;
  theme?: string | null;
  description?: string | null;
  rules?: string | null;
  submissionCriteria?: string | null;
  startDate: string;
  endDate: string;
  votingEndDate?: string | null;
  maxParticipants?: number | null;
  participantCount?: number;
  status: JamStatus;
  createdBy: string;
};

export type JamScore = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  submissionId: string;
  criteriaId: string;
  judgeUserId: string;
  score: number;
  feedback?: string | null;
};

export type JamStatus = 0 | 1 | 2 | 3 | 4;

export type Language = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  code: string;
  name: string;
  isActive?: boolean;
  resourceLocalizations?: Array<ResourceLocalization> | null;
};

export type LocalSignInRequestDto = {
  username?: string | null;
  email: string;
  password: string;
  tenantId?: string | null;
};

export type LocalSignUpRequestDto = {
  username?: string | null;
  email: string;
  password: string;
  tenantId?: string | null;
};

export type LocalizationStatus = 0 | 1 | 2 | 3 | 4;

export type LocationStatus = 0 | 1 | 2;

export type MemberStatus = 0 | 1 | 2;

export type ModuleAction = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 20 | 21 | 22 | 23 | 24 | 30 | 31 | 32 | 40 | 41 | 42 | 43;

export type ModulePermission = {
  module?: ModuleType;
  action?: ModuleAction;
  constraints?: Array<PermissionConstraint> | null;
  isGranted?: boolean;
  expiresAt?: string | null;
};

export type ModuleRole = {
  name?: string | null;
  module?: ModuleType;
  description?: string | null;
  permissions?: Array<ModulePermission> | null;
  priority?: number;
  isSystemRole?: boolean;
};

export type ModuleType = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;

export type MonetizationDto = {
  price?: number;
  currency?: string | null;
  isSubscription?: boolean;
  subscriptionDurationDays?: number | null;
};

export type MoveContentDto = {
  contentId: string;
  newParentId?: string | null;
  newSortOrder: number;
};

export type Payment = {
  id?: string;
  userId: string;
  productId?: string | null;
  amount?: number;
  currency: string | null;
  status?: PaymentStatus;
  method?: PaymentMethod;
  gateway?: PaymentGateway;
  providerTransactionId?: string | null;
  paymentIntentId?: string | null;
  discountCodeId?: string | null;
  discountAmount?: number;
  finalAmount?: number;
  processingFee?: number;
  netAmount?: number;
  createdAt?: string;
  updatedAt?: string;
  processedAt?: string | null;
  failedAt?: string | null;
  failureReason?: string | null;
  metadata?: string | null;
  refunds?: Array<PaymentRefund> | null;
};

export type PaymentGateway = 0 | 1 | 2 | 3 | 4 | 99;

export type PaymentMethod = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;

export type PaymentMethodStatus = 0 | 1 | 2 | 3;

export type PaymentMethodType = 0 | 1 | 2 | 3 | 4;

export type PaymentRefund = {
  id?: string;
  paymentId?: string;
  payment?: Payment;
  externalRefundId: string;
  refundAmount?: number;
  reason: string;
  status?: RefundStatus;
  processedAt?: string | null;
  createdAt?: string;
  updatedAt?: string;
};

export type PaymentStats = {
  totalPayments?: number;
  totalRevenue?: number;
  averagePaymentAmount?: number;
  successfulPayments?: number;
  failedPayments?: number;
  refundedPayments?: number;
  totalRefunded?: number;
  netRevenue?: number;
  paymentsByMethod?: {
    [key: string]: number;
  } | null;
  revenueByMethod?: {
    [key: string]: number;
  } | null;
};

export type PaymentStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6;

export type PermissionConstraint = {
  type?: string | null;
  value?: string | null;
  expiresAt?: string | null;
};

export type PermissionHierarchy = {
  permission?: PermissionType;
  userId?: string;
  tenantId?: string | null;
  resourceId?: string | null;
  contentTypeName?: string | null;
  layers?: Array<PermissionLayer> | null;
  finalResult?: PermissionResult;
};

export type PermissionLayer = {
  source?: PermissionSource;
  isGranted?: boolean | null;
  isDefault?: boolean;
  grantedBy?: string | null;
  grantedAt?: string | null;
  expiresAt?: string | null;
  priority?: number;
  description?: string | null;
};

export type PermissionResult = {
  isGranted?: boolean;
  isExplicitlyDenied?: boolean;
  source?: PermissionSource;
  grantedBy?: string | null;
  grantedAt?: string | null;
  expiresAt?: string | null;
  reason?: string | null;
  priority?: number;
  isInherited?: boolean;
};

export type PermissionSource = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;

export type PermissionType =
  | 1
  | 2
  | 3
  | 4
  | 5
  | 6
  | 7
  | 8
  | 9
  | 10
  | 11
  | 12
  | 13
  | 14
  | 15
  | 16
  | 17
  | 18
  | 19
  | 20
  | 21
  | 22
  | 23
  | 24
  | 25
  | 26
  | 27
  | 28
  | 29
  | 30
  | 31
  | 32
  | 33
  | 34
  | 35
  | 36
  | 37
  | 38
  | 39
  | 40
  | 41
  | 42
  | 43
  | 44
  | 45
  | 46
  | 47
  | 48
  | 49
  | 50
  | 51
  | 52
  | 53
  | 54
  | 55
  | 56
  | 57
  | 58
  | 59
  | 60
  | 61
  | 62
  | 63
  | 64
  | 65
  | 66
  | 67
  | 68
  | 69
  | 70
  | 71
  | 72
  | 73
  | 74
  | 75
  | 76
  | 77
  | 78
  | 79
  | 80
  | 81
  | 82
  | 83
  | 84
  | 85
  | 86
  | 87
  | 88
  | 89
  | 90
  | 91;

export type PermissionUpdateResult = {
  success?: boolean;
  errorMessage?: string | null;
  grantedPermissions?: Array<PermissionType> | null;
  revokedPermissions?: Array<PermissionType> | null;
};

export type PostDto = {
  id?: string;
  title?: string | null;
  description?: string | null;
  slug?: string | null;
  postType?: string | null;
  authorId?: string | null;
  authorName?: string | null;
  isSystemGenerated?: boolean;
  visibility?: AccessLevel;
  status?: ContentStatus;
  isPinned?: boolean;
  likesCount?: number;
  commentsCount?: number;
  sharesCount?: number;
  richContent?: string | null;
  contentReferences?: Array<ContentReferenceDto> | null;
  createdAt?: string;
  updatedAt?: string;
};

export type PostsPageDto = {
  posts?: Array<PostDto> | null;
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
};

export type PrerequisiteStatusDto = {
  prerequisiteAchievementId?: string;
  name?: string | null;
  isMet?: boolean;
  requiresCompletion?: boolean;
  minimumLevel?: number | null;
  userLevel?: number | null;
};

export type PricingDto = {
  price?: number;
  currency?: string | null;
  isSubscription?: boolean;
  subscriptionDurationDays?: number | null;
  isMonetizationEnabled?: boolean;
};

export type ProblemDetails = {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | undefined;
};

export type ProcessPaymentRequest = {
  providerTransactionId?: string | null;
  providerMetadata?: {
    [key: string]: unknown;
  } | null;
};

export type ProcessPaymentResult = {
  success?: boolean;
  payment?: Payment;
  error?: string | null;
  autoEnrollTriggered?: boolean;
};

export type Product = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  licenses?: Array<ContentLicense> | null;
  slug?: string | null;
  status?: ContentStatus;
  name: string;
  shortDescription?: string | null;
  imageUrl?: string | null;
  type?: ProductType;
  isBundle?: boolean;
  creatorId?: string | null;
  creator?: User;
  bundleItems?: string | null;
  referralCommissionPercentage?: number;
  maxAffiliateDiscount?: number;
  affiliateCommissionPercentage?: number;
  productPrograms?: Array<ProductProgram> | null;
  productPricings?: Array<ProductPricing> | null;
  subscriptionPlans?: Array<ProductSubscriptionPlan> | null;
  userProducts?: Array<UserProduct> | null;
  promoCodes?: Array<PromoCode> | null;
};

export type ProductAccessStatus = 0 | 1 | 2 | 3;

export type ProductAcquisitionType = 0 | 1 | 2 | 3;

export type ProductPricing = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  productId: string;
  product?: Product;
  name: string;
  basePrice?: number;
  salePrice?: number | null;
  currency?: string | null;
  saleStartDate?: string | null;
  saleEndDate?: string | null;
  isDefault?: boolean;
};

export type ProductProgram = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  productId: string;
  product?: Product;
  programId: string;
  program?: Program;
  sortOrder?: number;
};

export type ProductSubscriptionPlan = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  productId: string;
  product?: Product;
  name: string;
  description?: string | null;
  price?: number;
  currency?: string | null;
  billingInterval?: SubscriptionBillingInterval;
  intervalCount?: number;
  trialPeriodDays?: number | null;
  isActive?: boolean;
  isDefault?: boolean;
  userSubscriptions?: Array<UserSubscription> | null;
};

export type ProductType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;

export type Program = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  licenses?: Array<ContentLicense> | null;
  slug?: string | null;
  status?: ContentStatus;
  thumbnail?: string | null;
  videoShowcaseUrl?: string | null;
  estimatedHours?: number | null;
  enrollmentStatus?: EnrollmentStatus;
  maxEnrollments?: number | null;
  enrollmentDeadline?: string | null;
  category?: ProgramCategory;
  difficulty?: ProgramDifficulty;
  programContents?: Array<ProgramContent> | null;
  programUsers?: Array<ProgramUser> | null;
  productPrograms?: Array<ProductProgram> | null;
  certificates?: Array<Certificate> | null;
  feedbackSubmissions?: Array<ProgramFeedbackSubmission> | null;
  programRatings?: Array<ProgramRating> | null;
  programWishlists?: Array<ProgramWishlist> | null;
  readonly skillsRequired?: Array<CertificateTag> | null;
  readonly skillsProvided?: Array<CertificateTag> | null;
  readonly currentEnrollments?: number;
  readonly averageRating?: number;
  readonly totalRatings?: number;
  readonly isEnrollmentOpen?: boolean;
};

export type ProgramAnalyticsDto = {
  programId?: string;
  title?: string | null;
  totalUsers?: number;
  activeUsers?: number;
  completedUsers?: number;
  completionRate?: number;
  averageCompletionTime?: string;
  totalViews?: number;
  lastActivity?: string | null;
  additionalMetrics?: {
    [key: string]: unknown;
  } | null;
};

export type ProgramCategory = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17;

export type ProgramContent = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  programId: string;
  parentId?: string | null;
  title: string;
  description?: string | null;
  type?: ProgramContentType;
  body?: string | null;
  sortOrder?: number;
  isRequired?: boolean;
  gradingMethod?: GradingMethod;
  maxPoints?: number | null;
  estimatedMinutes?: number | null;
  visibility?: Visibility;
  program?: Program;
  parent?: ProgramContent;
  children?: Array<ProgramContent> | null;
  contentInteractions?: Array<ContentInteraction> | null;
};

export type ProgramContentDto = {
  id?: string;
  programId?: string;
  parentId?: string | null;
  title?: string | null;
  description?: string | null;
  type?: ProgramContentType;
  body?: unknown;
  sortOrder?: number;
  isRequired?: boolean;
  gradingMethod?: GradingMethod;
  maxPoints?: number | null;
  estimatedMinutes?: number | null;
  visibility?: Visibility;
  createdAt?: string;
  updatedAt?: string | null;
  programTitle?: string | null;
  parentTitle?: string | null;
  childrenCount?: number;
  children?: Array<ProgramContentDto> | null;
};

export type ProgramContentType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;

export type ProgramDifficulty = 0 | 1 | 2 | 3;

export type ProgramFeedbackSubmission = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId?: string;
  programId?: string;
  productId?: string | null;
  programUserId?: string;
  feedbackData?: string | null;
  overallRating?: number | null;
  comments?: string | null;
  wouldRecommend?: boolean | null;
  submittedAt?: string;
  user?: User;
  program?: Program;
  product?: Product;
  programUser?: ProgramUser;
};

export type ProgramRating = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  programId?: string;
  userId?: string | null;
  rating?: number;
  review?: string | null;
  isVerified?: boolean;
  isFeatured?: boolean;
  helpfulVotes?: number;
  unhelpfulVotes?: number;
  program?: Program;
};

export type ProgramUser = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId: string;
  user?: User;
  programId: string;
  program?: Program;
  isActive?: boolean;
  joinedAt?: string;
  completionPercentage?: number;
  finalGrade?: number | null;
  startedAt?: string | null;
  completedAt?: string | null;
  lastAccessedAt?: string | null;
  contentInteractions?: Array<ContentInteraction> | null;
  receivedGrades?: Array<ActivityGrade> | null;
  givenGrades?: Array<ActivityGrade> | null;
  userCertificates?: Array<UserCertificate> | null;
  feedbackSubmissions?: Array<ProgramFeedbackSubmission> | null;
  programRatings?: Array<ProgramRating> | null;
};

export type ProgramUserSummaryDto = {
  id?: string;
  userDisplayName?: string | null;
  userEmail?: string | null;
};

export type ProgramWishlist = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId?: string;
  programId?: string;
  addedAt?: string;
  notes?: string | null;
  user?: User;
  program?: Program;
};

export type ProgressStatus = 0 | 1 | 2 | 3;

export type Project = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  licenses?: Array<ContentLicense> | null;
  slug?: string | null;
  status?: ContentStatus;
  shortDescription?: string | null;
  imageUrl?: string | null;
  type?: ProjectType;
  developmentStatus?: DevelopmentStatus;
  category?: ProjectCategory;
  categoryId?: string | null;
  websiteUrl?: string | null;
  repositoryUrl?: string | null;
  socialLinks?: string | null;
  downloadUrl?: string | null;
  tags?: string | null;
  projectMetadata?: ProjectMetadata;
  versions?: Array<ProjectVersion> | null;
  collaborators?: Array<ProjectCollaborator> | null;
  releases?: Array<ProjectRelease> | null;
  teams?: Array<ProjectTeam> | null;
  followers?: Array<ProjectFollower> | null;
  feedbacks?: Array<ProjectFeedback> | null;
  jamSubmissions?: Array<ProjectJamSubmission> | null;
  createdBy?: User;
  createdById?: string | null;
  tenant?: Tenant;
  tenantId?: string | null;
  readonly isActive?: boolean;
  latestVersion?: ProjectVersion;
  readonly followerCount?: number;
  readonly averageRating?: number | null;
  readonly feedbackCount?: number;
  readonly isInJam?: boolean;
  readonly teamCount?: number;
};

export type ProjectCategory = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  name: string;
  projects?: Array<Project> | null;
};

export type ProjectCollaborator = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  project?: Project;
  userId?: string;
  user?: User;
  role: string;
  permissions: string;
  isActive?: boolean;
  joinedAt?: string;
  leftAt?: string | null;
};

export type ProjectCollaboratorDto = {
  userId?: string;
  userName?: string | null;
  email?: string | null;
  profilePictureUrl?: string | null;
  role?: string | null;
  permissions?: Array<PermissionType> | null;
  joinedAt?: string;
  invitedBy?: string | null;
  isOwner?: boolean;
  expiresAt?: string | null;
};

export type ProjectFeedback = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  project?: Project;
  userId?: string;
  user?: User;
  rating?: number;
  title: string;
  content?: string | null;
  categories?: string | null;
  isFeatured?: boolean;
  isVerified?: boolean;
  status?: ContentStatus;
  helpfulVotes?: number;
  totalVotes?: number;
  platform?: string | null;
  projectVersion?: string | null;
};

export type ProjectFollower = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  project?: Project;
  userId?: string;
  user?: User;
  followedAt?: string;
  notificationSettings?: string | null;
  emailNotifications?: boolean;
  pushNotifications?: boolean;
};

export type ProjectJamSubmission = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  project?: Project;
  jamId?: string | null;
  jam?: Jam;
  submittedAt?: string;
  isEligible?: boolean;
  submissionNotes?: string | null;
  finalScore?: number | null;
  ranking?: number | null;
  hasAward?: boolean;
  awardDetails?: string | null;
  scores?: Array<JamScore> | null;
};

export type ProjectMetadata = {
  id?: string;
  project: Project;
  projectId?: string;
  viewCount?: number;
  downloadCount?: number;
  followerCount?: number;
};

export type ProjectRelease = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  releaseVersion: string;
  releasedAt?: string;
  isLatest?: boolean;
  isPrerelease?: boolean;
  downloadUrl?: string | null;
  fileSize?: number | null;
  downloadCount?: number;
  releaseNotes?: string | null;
  checksum?: string | null;
  systemRequirements?: string | null;
  supportedPlatforms?: string | null;
  releaseType?: string | null;
  status?: ContentStatus;
  buildNumber?: string | null;
  releaseMetadata?: string | null;
};

export type ProjectRoleTemplate = {
  name?: string | null;
  description?: string | null;
  permissions?: Array<PermissionType> | null;
};

export type ProjectStatistics = {
  projectId?: string;
  followerCount?: number;
  feedbackCount?: number;
  averageRating?: number | null;
  totalDownloads?: number;
  activeTeamCount?: number;
  collaboratorCount?: number;
  releaseCount?: number;
  jamSubmissionCount?: number;
  awardCount?: number;
  viewsLast30Days?: number;
  downloadsLast30Days?: number;
  newFollowersLast30Days?: number;
  calculatedAt?: string;
  trendingScore?: number;
  popularityRank?: number | null;
};

export type ProjectTeam = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  projectId?: string;
  project?: Project;
  teamId?: string;
  team?: Team;
  role: string;
  assignedAt?: string;
  endedAt?: string | null;
  isActive?: boolean;
  permissions?: string | null;
  notes?: string | null;
  contributionPercentage?: number;
};

export type ProjectType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 99;

export type ProjectVersion = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  project: Project;
  projectId?: string;
  versionNumber: string;
  releaseNotes?: string | null;
  status: string;
  downloadCount?: number;
  createdBy: User;
  createdById?: string;
};

export type PromoCode = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  code: string;
  name: string;
  description?: string | null;
  type?: PromoCodeType;
  discountPercentage?: number | null;
  discountAmount?: number | null;
  currency?: string | null;
  minimumOrderAmount?: number | null;
  maxUses?: number | null;
  maxUsesPerUser?: number | null;
  validFrom?: string | null;
  validUntil?: string | null;
  isActive?: boolean;
  productId?: string | null;
  product?: Product;
  createdBy: string;
  createdByUser?: User;
  promoCodeUses?: Array<PromoCodeUse> | null;
  financialTransactions?: Array<FinancialTransaction> | null;
};

export type PromoCodeType = 0 | 1 | 2 | 3;

export type PromoCodeUse = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  promoCodeId: string;
  promoCode?: PromoCode;
  userId: string;
  user?: User;
  financialTransactionId: string;
  financialTransaction?: FinancialTransaction;
  discountApplied?: number;
};

export type PublishProjectResult = {
  success?: boolean;
  project?: Project;
  error?: string | null;
};

export type RateFeedbackQualityDto = {
  quality?: FeedbackQuality;
};

export type RefreshTokenRequestDto = {
  refreshToken?: string | null;
  tenantId?: string | null;
};

export type RefundPaymentRequest = {
  refundAmount?: number | null;
  reason?: string | null;
};

export type RefundPaymentResult = {
  success?: boolean;
  refund?: PaymentRefund;
  error?: string | null;
};

export type RefundStatus = 0 | 1 | 2 | 3 | 4;

export type RegistrationType = 0 | 1;

export type RejectProgramDto = {
  reason?: string | null;
};

export type ReorderContentDto = {
  contentIds?: Array<string> | null;
};

export type ReportFeedbackDto = {
  reason?: string | null;
};

export type ResourceInvitation = {
  id?: string;
  email?: string | null;
  permissions?: Array<PermissionType> | null;
  invitedAt?: string;
  invitedByUserId?: string;
  invitedByUserName?: string | null;
  expiresAt?: string | null;
  message?: string | null;
  status?: InvitationStatus;
};

export type ResourceLocalization = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  resourceType: string;
  language: Language;
  fieldName: string;
  resourceId: string;
  content: string;
  isDefault?: boolean;
  status?: LocalizationStatus;
};

export type ResourceMetadata = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  resourceType: string;
  additionalData?: string | null;
  tags?: string | null;
  seoMetadata?: string | null;
};

export type ResourceUserPermission = {
  userId?: string;
  userName?: string | null;
  email?: string | null;
  profilePictureUrl?: string | null;
  permissions?: Array<PermissionType> | null;
  grantedAt?: string;
  grantedByUserId?: string;
  grantedByUserName?: string | null;
  expiresAt?: string | null;
  isOwner?: boolean;
  source?: PermissionSource;
};

export type RevenueAnalyticsDto = {
  programId?: string;
  totalRevenue?: number;
  monthlyRevenue?: number;
  totalPurchases?: number;
  monthlyPurchases?: number;
  averageRevenuePerUser?: number;
  conversionRate?: number;
  revenueChart?: Array<RevenueChartDto> | null;
};

export type RevenueChartDto = {
  date?: string;
  revenue?: number;
  purchases?: number;
};

export type RevenueDataPoint = {
  date?: string;
  revenue?: number;
  netRevenue?: number;
  transactionCount?: number;
  averageTransactionValue?: number;
};

export type RevenueReport = {
  fromDate?: string;
  toDate?: string;
  totalRevenue?: number;
  netRevenue?: number;
  totalTransactions?: number;
  dataPoints?: Array<RevenueDataPoint> | null;
};

export type RevokeAchievementRequest = {
  reason?: string | null;
};

export type RevokeRoleRequest = {
  userId?: string;
  tenantId?: string | null;
  module?: ModuleType;
  roleName?: string | null;
};

export type RevokeTokenRequestDto = {
  refreshToken?: string | null;
};

export type ScheduleProgramDto = {
  publishAt?: string;
};

export type SearchContentDto = {
  programId: string;
  searchTerm: string;
  type?: ProgramContentType;
  visibility?: Visibility;
  isRequired?: boolean | null;
  parentId?: string | null;
};

export type SessionProject = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  sessionId?: string;
  session?: TestingSession;
  projectId?: string;
  project?: Project;
  projectVersionId?: string | null;
  projectVersion?: ProjectVersion;
  notes?: string | null;
  registeredAt?: string;
  registeredById?: string;
  registeredBy?: User;
  isActive?: boolean;
};

export type SessionRegistration = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  sessionId?: string;
  session?: TestingSession;
  userId?: string;
  user?: User;
  registrationType: RegistrationType;
  projectRole?: TeamRole;
  registrationNotes?: string | null;
  attendanceStatus: AttendanceStatus;
  attendedAt?: string | null;
};

export type SessionRegistrationRequest = {
  registrationType?: RegistrationType;
  notes?: string | null;
};

export type SessionStatus = 0 | 1 | 2 | 3;

export type SessionWaitlist = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  sessionId?: string;
  session?: TestingSession;
  userId?: string;
  user?: User;
  registrationType: RegistrationType;
  position: number;
  registrationNotes?: string | null;
};

export type SetPricingRequest = {
  basePrice?: number;
  currency?: string | null;
};

export type ShareProjectWithRoleRequest = {
  roleName?: string | null;
  userEmails?: Array<string> | null;
  userIds?: Array<string> | null;
  expiresAt?: string | null;
  message?: string | null;
  requireAcceptance?: boolean;
  notifyUsers?: boolean;
};

export type ShareResourceRequest = {
  userEmails?: Array<string> | null;
  userIds?: Array<string> | null;
  permissions?: Array<PermissionType> | null;
  expiresAt?: string | null;
  message?: string | null;
  requireAcceptance?: boolean;
  notifyUsers?: boolean;
};

export type ShareResult = {
  success?: boolean;
  errorMessage?: string | null;
  userResults?: Array<UserShareResult> | null;
  shareId?: string | null;
};

export type SignInResponseDto = {
  accessToken?: string | null;
  refreshToken?: string | null;
  expiresAt?: string;
  user?: UserDto;
  tenantId?: string | null;
  availableTenants?: Array<TenantInfoDto> | null;
};

export type SkillProficiencyLevel = 0 | 1 | 2 | 3 | 4 | 5 | 6;

export type SortDirection = 0 | 1;

export type StartContentRequest = {
  programUserId?: string;
  contentId?: string;
};

export type StudentSummaryDto = {
  id?: string;
  userDisplayName?: string | null;
  userEmail?: string | null;
};

export type SubmitContentRequest = {
  programUserId?: string;
  contentId?: string;
  submissionData?: string | null;
};

export type SubmitFeedbackDto = {
  testingRequestId: string;
  feedbackResponses: string;
  overallRating?: number | null;
  wouldRecommend?: boolean | null;
  additionalNotes?: string | null;
  sessionId?: string | null;
};

export type SubscriptionBillingInterval = 0 | 1 | 2 | 3;

export type SubscriptionStatus = 0 | 1 | 2 | 3 | 4 | 5 | 6;

export type TagProficiency = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  name: string;
  description?: string | null;
  type?: TagType;
  proficiencyLevel?: SkillProficiencyLevel;
  color?: string | null;
  icon?: string | null;
  isActive?: boolean;
  certificateTags?: Array<CertificateTag> | null;
};

export type TagType = 0 | 1 | 2 | 3 | 4 | 5 | 6;

export type Team = {
  id?: string;
  name?: string | null;
  description?: string | null;
  members?: Array<TeamMember> | null;
};

export type TeamMember = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  teamId?: string;
  userId?: string | null;
  role?: TeamRole;
  invitedBy?: string | null;
  status?: MemberStatus;
  team?: Team;
};

export type TeamRole = 0 | 1 | 2;

export type Tenant = {
  readonly isNew?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  title: string;
  description?: string | null;
  visibility: AccessLevel;
  metadata?: ResourceMetadata;
  tenant?: Tenant;
  readonly isGlobal?: boolean;
  localizations?: Array<ResourceLocalization> | null;
  name: string;
  isActive?: boolean;
  slug: string;
  tenantPermissions?: Array<TenantPermission> | null;
};

export type TenantDomain = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  topLevelDomain: string;
  subdomain?: string | null;
  isMainDomain?: boolean;
  isSecondaryDomain?: boolean;
  tenantId: string;
  userGroupId?: string | null;
  tenant?: Tenant;
  userGroup?: TenantUserGroup;
  readonly fullDomainName?: string | null;
  readonly domainType?: string | null;
};

export type TenantInfoDto = {
  id?: string;
  name?: string | null;
  isActive?: boolean;
};

export type TenantPermission = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  permissionFlags1?: number;
  permissionFlags2?: number;
  userId?: string | null;
  user?: User;
  tenantId?: string | null;
  tenant?: Tenant;
  expiresAt?: string | null;
  readonly isExpired?: boolean;
  readonly isValid?: boolean;
  readonly isDefaultPermission?: boolean;
  readonly isGlobalDefaultPermission?: boolean;
  readonly isUserPermission?: boolean;
  readonly isActiveMembership?: boolean;
};

export type TenantSortField = 0 | 1 | 2 | 3 | 4 | 5;

export type TenantStatistics = {
  totalTenants?: number;
  activeTenants?: number;
  inactiveTenants?: number;
  deletedTenants?: number;
  oldestTenantCreatedAt?: string | null;
  newestTenantCreatedAt?: string | null;
  lastUpdatedAt?: string;
};

export type TenantUserGroup = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  name: string;
  description?: string | null;
  tenantId: string;
  parentGroupId?: string | null;
  isActive?: boolean;
  isDefault?: boolean;
  tenant?: Tenant;
  parentGroup?: TenantUserGroup;
  subGroups?: Array<TenantUserGroup> | null;
  memberships?: Array<TenantUserGroupMembership> | null;
  domains?: Array<TenantDomain> | null;
};

export type TenantUserGroupDto = {
  id?: string;
  name?: string | null;
  description?: string | null;
  tenantId?: string;
  parentGroupId?: string | null;
  isActive?: boolean;
  isDefault?: boolean;
  createdAt?: string;
  updatedAt?: string;
};

export type TenantUserGroupMembership = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId: string;
  userGroupId: string;
  joinedAt: string;
  isAutoAssigned?: boolean;
  user?: User;
  userGroup?: TenantUserGroup;
};

export type TenantUserGroupMembershipDto = {
  id?: string;
  userId?: string;
  userGroupId?: string;
  groupId?: string;
  joinedAt?: string;
  isAutoAssigned?: boolean;
  createdAt?: string;
  updatedAt?: string;
};

export type TestingContext = 0 | 1;

export type TestingFeedback = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  testingRequestId?: string;
  testingRequest?: TestingRequest;
  feedbackFormId?: string;
  feedbackForm?: TestingFeedbackForm;
  userId?: string;
  user?: User;
  sessionId?: string | null;
  session?: TestingSession;
  testingContext: TestingContext;
  feedbackData: string;
  overallRating?: number | null;
  wouldRecommend?: boolean | null;
  additionalNotes?: string | null;
  isReported?: boolean;
  qualityRating?: FeedbackQuality;
  reportReason?: string | null;
  reportedByUserId?: string | null;
  reportedByUser?: User;
  reportedAt?: string | null;
};

export type TestingFeedbackForm = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  testingRequestId: string;
  formSchema: string;
  isForOnline?: boolean;
  isForSessions?: boolean;
};

export type TestingLabActionPermissions = {
  canCreateSessions?: boolean;
  canDeleteSessions?: boolean;
  canManageTesters?: boolean;
  canViewReports?: boolean;
  canExportData?: boolean;
};

export type TestingLabPermissions = {
  canCreateSessions?: boolean;
  canEditSessions?: boolean;
  canDeleteSessions?: boolean;
  canManageTesters?: boolean;
  canViewReports?: boolean;
  canExportData?: boolean;
  canAdminister?: boolean;
  assignedRoles?: Array<string> | null;
  constraints?: Array<PermissionConstraint> | null;
};

export type TestingLocation = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  name: string;
  description?: string | null;
  address?: string | null;
  maxTestersCapacity: number;
  maxProjectsCapacity: number;
  equipmentAvailable?: string | null;
  status: LocationStatus;
};

export type TestingParticipant = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  testingRequestId?: string;
  testingRequest?: TestingRequest;
  userId?: string;
  user?: User;
  instructionsAcknowledged: boolean;
  instructionsAcknowledgedAt?: string | null;
  startedAt: string;
  completedAt?: string | null;
};

export type TestingRequest = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  projectVersionId?: string;
  projectVersion?: ProjectVersion;
  title: string;
  description?: string | null;
  downloadUrl?: string | null;
  instructionsType: InstructionType;
  instructionsContent?: string | null;
  instructionsUrl?: string | null;
  instructionsFileId?: string | null;
  feedbackFormContent?: string | null;
  maxTesters?: number | null;
  currentTesterCount?: number;
  startDate: string;
  endDate: string;
  status: TestingRequestStatus;
  createdById?: string;
  createdBy?: User;
};

export type TestingRequestStatus = 0 | 1 | 2 | 3 | 4;

export type TestingSession = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  testingRequestId?: string;
  testingRequest?: TestingRequest;
  locationId?: string;
  location?: TestingLocation;
  sessionName: string;
  sessionDate: string;
  startTime: string;
  endTime: string;
  maxTesters: number;
  maxProjects: number;
  registeredTesterCount?: number;
  registeredProjectMemberCount?: number;
  registeredProjectCount?: number;
  status: SessionStatus;
  managerId?: string;
  manager?: User;
  managerUserId?: string;
  createdById?: string;
  createdBy?: User;
  registrations?: Array<SessionRegistration> | null;
  sessionProjects?: Array<SessionProject> | null;
};

export type TransactionStatus = 0 | 1 | 2 | 3 | 4 | 5;

export type TransactionType = 0 | 1 | 2 | 3 | 4 | 5 | 6;

export type UnpublishProjectResult = {
  success?: boolean;
  project?: Project;
  error?: string | null;
};

export type UpdateAchievementCommand = {
  achievementId?: string;
  name?: string | null;
  description?: string | null;
  category?: string | null;
  type?: string | null;
  iconUrl?: string | null;
  color?: string | null;
  points?: number | null;
  isActive?: boolean | null;
  isSecret?: boolean | null;
  isRepeatable?: boolean | null;
  conditions?: string | null;
  displayOrder?: number | null;
  userId?: string;
};

export type UpdateAchievementProgressRequest = {
  progressIncrement?: number;
  context?: string | null;
  autoAward?: boolean;
};

export type UpdateActivityGradeDto = {
  grade?: number | null;
  feedback?: string | null;
  gradingDetails?: string | null;
};

export type UpdateAttendanceDto = {
  userId?: string;
  attendanceStatus?: AttendanceStatus;
};

export type UpdateCollaboratorRequest = {
  permissions?: Array<PermissionType> | null;
  expiresAt?: string | null;
};

export type UpdateContentDto = {
  title?: string | null;
  description?: string | null;
  body?: string | null;
  sortOrder?: number | null;
  isRequired?: boolean | null;
  estimatedMinutes?: number | null;
};

export type UpdateCredentialDto = {
  type: string;
  value: string;
  metadata?: string | null;
  expiresAt?: string | null;
  isActive?: boolean;
};

export type UpdatePaymentMethodDto = {
  paymentMethodId?: string;
};

export type UpdatePermissionsRequest = {
  permissions?: Array<PermissionType> | null;
  expiresAt?: string | null;
};

export type UpdatePricingDto = {
  price?: number | null;
  currency?: string | null;
  isSubscription?: boolean | null;
  subscriptionDurationDays?: number | null;
};

export type UpdateProductCommand = {
  productId?: string;
  name?: string | null;
  description?: string | null;
  shortDescription?: string | null;
  imageUrl?: string | null;
  type?: ProductType;
  isBundle?: boolean | null;
  bundleItems?: Array<string> | null;
  referralCommissionPercentage?: number | null;
  maxAffiliateDiscount?: number | null;
  affiliateCommissionPercentage?: number | null;
  visibility?: AccessLevel;
  status?: ContentStatus;
  updatedBy?: string;
};

export type UpdateProgramContentDto = {
  id: string;
  title?: string | null;
  description?: string | null;
  type?: ProgramContentType;
  body?: string | null;
  sortOrder?: number | null;
  isRequired?: boolean | null;
  gradingMethod?: GradingMethod;
  maxPoints?: number | null;
  estimatedMinutes?: number | null;
  visibility?: Visibility;
};

export type UpdateProgramDto = {
  title?: string | null;
  description?: string | null;
  thumbnail?: string | null;
};

export type UpdateProgressDto = {
  status?: ProgressStatus;
  lastAccessedAt?: string | null;
  additionalData?: {
    [key: string]: unknown;
  } | null;
};

export type UpdateProgressRequest = {
  programUserId?: string;
  contentId?: string;
  completionPercentage?: number;
};

export type UpdateProjectRequest = {
  title?: string | null;
  description?: string | null;
  shortDescription?: string | null;
  imageUrl?: string | null;
  repositoryUrl?: string | null;
  websiteUrl?: string | null;
  downloadUrl?: string | null;
  type?: ProjectType;
  categoryId?: string | null;
  visibility?: AccessLevel;
  status?: ContentStatus;
  tags?: Array<string> | null;
};

export type UpdateProjectResult = {
  success?: boolean;
  project?: Project;
  error?: string | null;
};

export type UpdateRoleRequest = {
  permissions?: Array<ModulePermission> | null;
};

export type UpdateTenantDomainDto = {
  topLevelDomain?: string | null;
  subdomain?: string | null;
  isMainDomain?: boolean | null;
  isSecondaryDomain?: boolean | null;
  userGroupId?: string | null;
};

export type UpdateTenantDto = {
  name?: string | null;
  description?: string | null;
  slug?: string | null;
  isActive?: boolean | null;
};

export type UpdateTenantUserGroupDto = {
  name?: string | null;
  description?: string | null;
  parentGroupId?: string | null;
  isActive?: boolean | null;
  isDefault?: boolean | null;
};

export type UpdateTestingLocationDto = {
  name?: string | null;
  description?: string | null;
  address?: string | null;
  maxTestersCapacity?: number | null;
  maxProjectsCapacity?: number | null;
  equipmentAvailable?: string | null;
  status?: LocationStatus;
};

export type UpdateTimeSpentRequest = {
  programUserId?: string;
  contentId?: string;
  additionalMinutes?: number;
};

export type UpdateUserBalanceDto = {
  balance?: number;
  availableBalance?: number;
  reason?: string | null;
  expectedVersion?: number | null;
};

export type UpdateUserDto = {
  name?: string | null;
  email?: string | null;
  isActive?: boolean | null;
  expectedVersion?: number | null;
};

export type UpdateUserProfileDto = {
  givenName?: string | null;
  familyName?: string | null;
  displayName?: string | null;
  title?: string | null;
  description?: string | null;
  slug?: string | null;
  tenantId?: string | null;
};

export type User = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  name: string;
  email: string;
  isActive?: boolean;
  balance?: number;
  availableBalance?: number;
  credentials?: Array<Credential> | null;
};

export type UserAchievement = {
  id?: string;
  createdAt?: string;
  updatedAt?: string;
  rowVersion?: string | null;
  isDeleted?: boolean;
  deletedAt?: string | null;
  userId?: string | null;
  user?: User;
  achievementId?: string;
  achievement?: Achievement;
  earnedAt?: string;
  level?: number | null;
  progress?: number;
  maxProgress?: number;
  isCompleted?: boolean;
  isNotified?: boolean;
  context?: string | null;
  pointsEarned?: number;
  tenantId?: string | null;
  earnCount?: number;
};

export type UserAchievementDto = {
  id?: string;
  userId?: string;
  achievementId?: string;
  achievement?: AchievementDto;
  earnedAt?: string;
  level?: number | null;
  progress?: number;
  maxProgress?: number;
  isCompleted?: boolean;
  isNotified?: boolean;
  context?: string | null;
  pointsEarned?: number;
  earnCount?: number;
};

export type UserAchievementSummaryDto = {
  userId?: string;
  totalAchievements?: number;
  totalPoints?: number;
  completedAchievements?: number;
  inProgressAchievements?: number;
  recentAchievements?: Array<UserAchievementDto> | null;
  nearCompletion?: Array<AchievementProgressDto> | null;
  achievementsByCategory?: {
    [key: string]: number;
  } | null;
};

export type UserAchievementsPageDto = {
  userAchievements?: Array<UserAchievementDto> | null;
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
};

export type UserCertificate = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId: string;
  certificateId: string;
  programId?: string | null;
  productId?: string | null;
  programUserId?: string | null;
  verificationCode: string;
  finalGrade?: number | null;
  metadata?: string | null;
  status?: CertificateStatus;
  issuedAt?: string;
  expiresAt?: string | null;
  revokedAt?: string | null;
  revocationReason?: string | null;
  user?: User;
  certificate?: Certificate;
  program?: Program;
  product?: Product;
  programUser?: ProgramUser;
  blockchainAnchors?: Array<CertificateBlockchainAnchor> | null;
};

export type UserDto = {
  id?: string;
  username?: string | null;
  email?: string | null;
};

export type UserFinancialMethod = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId?: string;
  type?: PaymentMethodType;
  name: string;
  externalId?: string | null;
  lastFour?: string | null;
  expiryMonth?: string | null;
  expiryYear?: string | null;
  brand?: string | null;
  status?: PaymentMethodStatus;
  isDefault?: boolean;
  isActive?: boolean;
  displayName?: string | null;
  readonly lastFourDigits?: string | null;
  user?: User;
};

export type UserProduct = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId: string;
  user?: User;
  productId: string;
  product?: Product;
  subscriptionId?: string | null;
  subscription?: UserSubscription;
  acquisitionType?: ProductAcquisitionType;
  accessStatus?: ProductAccessStatus;
  pricePaid?: number;
  currency?: string | null;
  accessStartDate?: string | null;
  accessEndDate?: string | null;
  giftedByUserId?: string | null;
  giftedByUser?: User;
};

export type UserProfileDto = {
  id?: string;
  email?: string | null;
  username?: string | null;
  givenName?: string | null;
  familyName?: string | null;
  displayName?: string | null;
  title?: string | null;
  description?: string | null;
  isEmailVerified?: boolean;
  createdAt?: string;
  updatedAt?: string | null;
  currentTenant?: TenantInfoDto;
  availableTenants?: Array<TenantInfoDto> | null;
};

export type UserProfileResponseDto = {
  id?: string;
  version?: number;
  givenName?: string | null;
  familyName?: string | null;
  displayName?: string | null;
  title?: string | null;
  description?: string | null;
  slug?: string | null;
  tenantId?: string | null;
  createdBy?: string | null;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  isDeleted?: boolean;
};

export type UserProgressDto = {
  completionPercentage?: number;
  lastAccessedAt?: string | null;
  startedAt?: string | null;
  completedAt?: string | null;
  contentProgress?: Array<ContentProgressDto> | null;
};

export type UserResponseDto = {
  id?: string;
  version?: number;
  name?: string | null;
  email?: string | null;
  isActive?: boolean;
  balance?: number;
  availableBalance?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  isDeleted?: boolean;
  activeSubscription?: UserSubscriptionSummaryDto;
  role?: string | null;
  subscriptionType?: string | null;
};

export type UserResponseDtoPagedResult = {
  items?: Array<UserResponseDto> | null;
  totalCount?: number;
  skip?: number;
  take?: number;
  readonly pageNumber?: number;
  readonly totalPages?: number;
  readonly hasNextPage?: boolean;
  readonly hasPreviousPage?: boolean;
};

export type UserRoleAssignment = {
  id?: string;
  userId?: string;
  tenantId?: string | null;
  module?: ModuleType;
  roleName?: string | null;
  constraints?: Array<PermissionConstraint> | null;
  createdAt?: string;
  expiresAt?: string | null;
  isActive?: boolean;
};

export type UserShareResult = {
  email?: string | null;
  userId?: string | null;
  success?: boolean;
  errorMessage?: string | null;
  invitationSent?: boolean;
  invitationId?: string | null;
};

export type UserSortField = 0 | 1 | 2 | 3 | 4 | 5;

export type UserStatistics = {
  totalUsers?: number;
  activeUsers?: number;
  inactiveUsers?: number;
  deletedUsers?: number;
  totalBalance?: number;
  averageBalance?: number;
  usersCreatedToday?: number;
  usersCreatedThisWeek?: number;
  usersCreatedThisMonth?: number;
};

export type UserSubscription = {
  readonly isNew?: boolean;
  readonly isGlobal?: boolean;
  readonly domainEvents?: Array<IDomainEvent> | null;
  id?: string;
  version?: number;
  createdAt?: string;
  updatedAt?: string;
  deletedAt?: string | null;
  readonly isDeleted?: boolean;
  tenant?: Tenant;
  userId?: string;
  subscriptionPlanId?: string;
  status?: SubscriptionStatus;
  externalSubscriptionId?: string | null;
  currentPeriodStart?: string;
  currentPeriodEnd?: string;
  canceledAt?: string | null;
  endsAt?: string | null;
  trialEndsAt?: string | null;
  lastPaymentAt?: string | null;
  nextBillingAt?: string | null;
  user?: User;
  subscriptionPlan?: ProductSubscriptionPlan;
  userProducts?: Array<UserProduct> | null;
};

export type UserSubscriptionSummaryDto = {
  id?: string;
  status?: SubscriptionStatus;
  planName?: string | null;
  currentPeriodStart?: string;
  currentPeriodEnd?: string;
  trialEndsAt?: string | null;
  nextBillingAt?: string | null;
  isTrialActive?: boolean;
  isActive?: boolean;
};

export type VerificationMethod = 0 | 1 | 2;

export type Visibility = 0 | 1 | 2;

export type GetApiAchievementsLeaderboardData = {
  body?: never;
  path?: never;
  query?: {
    category?: string;
    limit?: number;
    orderBy?: string;
    timeFrame?: string;
  };
  url: '/api/achievements/leaderboard';
};

export type GetApiAchievementsLeaderboardResponses = {
  /**
   * OK
   */
  200: Array<UserAchievementSummaryDto>;
};

export type GetApiAchievementsLeaderboardResponse = GetApiAchievementsLeaderboardResponses[keyof GetApiAchievementsLeaderboardResponses];

export type GetApiAchievementsData = {
  body?: never;
  path?: never;
  query?: {
    pageNumber?: number;
    pageSize?: number;
    category?: string;
    type?: string;
    isActive?: boolean;
    isSecret?: boolean;
    includeSecrets?: boolean;
    searchTerm?: string;
    orderBy?: string;
    descending?: boolean;
    tenantId?: string;
  };
  url: '/api/achievements';
};

export type GetApiAchievementsResponses = {
  /**
   * OK
   */
  200: AchievementsPageDto;
};

export type GetApiAchievementsResponse = GetApiAchievementsResponses[keyof GetApiAchievementsResponses];

export type PostApiAchievementsData = {
  body?: CreateAchievementCommand;
  path?: never;
  query?: never;
  url: '/api/achievements';
};

export type PostApiAchievementsResponses = {
  /**
   * OK
   */
  200: Achievement;
};

export type PostApiAchievementsResponse = PostApiAchievementsResponses[keyof PostApiAchievementsResponses];

export type DeleteApiAchievementsByAchievementIdData = {
  body?: never;
  path: {
    achievementId: string;
  };
  query?: never;
  url: '/api/achievements/{achievementId}';
};

export type DeleteApiAchievementsByAchievementIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiAchievementsByAchievementIdData = {
  body?: never;
  path: {
    achievementId: string;
  };
  query?: {
    includeLevels?: boolean;
    includePrerequisites?: boolean;
  };
  url: '/api/achievements/{achievementId}';
};

export type GetApiAchievementsByAchievementIdResponses = {
  /**
   * OK
   */
  200: Achievement;
};

export type GetApiAchievementsByAchievementIdResponse = GetApiAchievementsByAchievementIdResponses[keyof GetApiAchievementsByAchievementIdResponses];

export type PutApiAchievementsByAchievementIdData = {
  body?: UpdateAchievementCommand;
  path: {
    achievementId: string;
  };
  query?: never;
  url: '/api/achievements/{achievementId}';
};

export type PutApiAchievementsByAchievementIdResponses = {
  /**
   * OK
   */
  200: Achievement;
};

export type PutApiAchievementsByAchievementIdResponse = PutApiAchievementsByAchievementIdResponses[keyof PutApiAchievementsByAchievementIdResponses];

export type PostApiAchievementsByAchievementIdAwardData = {
  body?: AwardAchievementRequest;
  path: {
    achievementId: string;
  };
  query?: never;
  url: '/api/achievements/{achievementId}/award';
};

export type PostApiAchievementsByAchievementIdAwardResponses = {
  /**
   * OK
   */
  200: UserAchievement;
};

export type PostApiAchievementsByAchievementIdAwardResponse = PostApiAchievementsByAchievementIdAwardResponses[keyof PostApiAchievementsByAchievementIdAwardResponses];

export type PostApiAchievementsByAchievementIdBulkAwardData = {
  body?: BulkAwardAchievementRequest;
  path: {
    achievementId: string;
  };
  query?: never;
  url: '/api/achievements/{achievementId}/bulk-award';
};

export type PostApiAchievementsByAchievementIdBulkAwardResponses = {
  /**
   * OK
   */
  200: Array<UserAchievement>;
};

export type PostApiAchievementsByAchievementIdBulkAwardResponse = PostApiAchievementsByAchievementIdBulkAwardResponses[keyof PostApiAchievementsByAchievementIdBulkAwardResponses];

export type GetApiAchievementsByAchievementIdStatisticsData = {
  body?: never;
  path: {
    achievementId: string;
  };
  query?: never;
  url: '/api/achievements/{achievementId}/statistics';
};

export type GetApiAchievementsByAchievementIdStatisticsResponses = {
  /**
   * OK
   */
  200: AchievementStatisticsDto;
};

export type GetApiAchievementsByAchievementIdStatisticsResponse = GetApiAchievementsByAchievementIdStatisticsResponses[keyof GetApiAchievementsByAchievementIdStatisticsResponses];

export type GetApiAchievementsStatisticsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/achievements/statistics';
};

export type GetApiAchievementsStatisticsResponses = {
  /**
   * OK
   */
  200: AchievementStatisticsDto;
};

export type GetApiAchievementsStatisticsResponse = GetApiAchievementsStatisticsResponses[keyof GetApiAchievementsStatisticsResponses];

export type PostApiProgramsByProgramIdActivityGradesData = {
  body?: CreateActivityGradeDto;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades';
};

export type PostApiProgramsByProgramIdActivityGradesResponses = {
  /**
   * OK
   */
  200: ActivityGradeDto;
};

export type PostApiProgramsByProgramIdActivityGradesResponse = PostApiProgramsByProgramIdActivityGradesResponses[keyof PostApiProgramsByProgramIdActivityGradesResponses];

export type GetApiProgramsByProgramIdActivityGradesInteractionByContentInteractionIdData = {
  body?: never;
  path: {
    programId: string;
    contentInteractionId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/interaction/{contentInteractionId}';
};

export type GetApiProgramsByProgramIdActivityGradesInteractionByContentInteractionIdResponses = {
  /**
   * OK
   */
  200: ActivityGradeDto;
};

export type GetApiProgramsByProgramIdActivityGradesInteractionByContentInteractionIdResponse =
  GetApiProgramsByProgramIdActivityGradesInteractionByContentInteractionIdResponses[keyof GetApiProgramsByProgramIdActivityGradesInteractionByContentInteractionIdResponses];

export type GetApiProgramsByProgramIdActivityGradesGraderByGraderProgramUserIdData = {
  body?: never;
  path: {
    programId: string;
    graderProgramUserId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/grader/{graderProgramUserId}';
};

export type GetApiProgramsByProgramIdActivityGradesGraderByGraderProgramUserIdResponses = {
  /**
   * OK
   */
  200: Array<ActivityGradeDto>;
};

export type GetApiProgramsByProgramIdActivityGradesGraderByGraderProgramUserIdResponse =
  GetApiProgramsByProgramIdActivityGradesGraderByGraderProgramUserIdResponses[keyof GetApiProgramsByProgramIdActivityGradesGraderByGraderProgramUserIdResponses];

export type GetApiProgramsByProgramIdActivityGradesStudentByProgramUserIdData = {
  body?: never;
  path: {
    programId: string;
    programUserId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/student/{programUserId}';
};

export type GetApiProgramsByProgramIdActivityGradesStudentByProgramUserIdResponses = {
  /**
   * OK
   */
  200: Array<ActivityGradeDto>;
};

export type GetApiProgramsByProgramIdActivityGradesStudentByProgramUserIdResponse = GetApiProgramsByProgramIdActivityGradesStudentByProgramUserIdResponses[keyof GetApiProgramsByProgramIdActivityGradesStudentByProgramUserIdResponses];

export type DeleteApiProgramsByProgramIdActivityGradesByGradeIdData = {
  body?: never;
  path: {
    programId: string;
    gradeId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/{gradeId}';
};

export type DeleteApiProgramsByProgramIdActivityGradesByGradeIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PutApiProgramsByProgramIdActivityGradesByGradeIdData = {
  body?: UpdateActivityGradeDto;
  path: {
    programId: string;
    gradeId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/{gradeId}';
};

export type PutApiProgramsByProgramIdActivityGradesByGradeIdResponses = {
  /**
   * OK
   */
  200: ActivityGradeDto;
};

export type PutApiProgramsByProgramIdActivityGradesByGradeIdResponse = PutApiProgramsByProgramIdActivityGradesByGradeIdResponses[keyof PutApiProgramsByProgramIdActivityGradesByGradeIdResponses];

export type GetApiProgramsByProgramIdActivityGradesPendingData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/pending';
};

export type GetApiProgramsByProgramIdActivityGradesPendingResponses = {
  /**
   * OK
   */
  200: Array<ContentInteractionDto>;
};

export type GetApiProgramsByProgramIdActivityGradesPendingResponse = GetApiProgramsByProgramIdActivityGradesPendingResponses[keyof GetApiProgramsByProgramIdActivityGradesPendingResponses];

export type GetApiProgramsByProgramIdActivityGradesStatisticsData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/statistics';
};

export type GetApiProgramsByProgramIdActivityGradesStatisticsResponses = {
  /**
   * OK
   */
  200: GradeStatisticsDto;
};

export type GetApiProgramsByProgramIdActivityGradesStatisticsResponse = GetApiProgramsByProgramIdActivityGradesStatisticsResponses[keyof GetApiProgramsByProgramIdActivityGradesStatisticsResponses];

export type GetApiProgramsByProgramIdActivityGradesContentByContentIdData = {
  body?: never;
  path: {
    programId: string;
    contentId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/activity-grades/content/{contentId}';
};

export type GetApiProgramsByProgramIdActivityGradesContentByContentIdResponses = {
  /**
   * OK
   */
  200: Array<ActivityGradeDto>;
};

export type GetApiProgramsByProgramIdActivityGradesContentByContentIdResponse = GetApiProgramsByProgramIdActivityGradesContentByContentIdResponses[keyof GetApiProgramsByProgramIdActivityGradesContentByContentIdResponses];

export type PostApiAuthSignUpData = {
  body?: LocalSignUpRequestDto;
  path?: never;
  query?: never;
  url: '/api/auth/sign-up';
};

export type PostApiAuthSignUpErrors = {
  /**
   * Bad Request
   */
  400: ProblemDetails;
  /**
   * Conflict
   */
  409: ProblemDetails;
};

export type PostApiAuthSignUpError = PostApiAuthSignUpErrors[keyof PostApiAuthSignUpErrors];

export type PostApiAuthSignUpResponses = {
  /**
   * Created
   */
  201: SignInResponseDto;
};

export type PostApiAuthSignUpResponse = PostApiAuthSignUpResponses[keyof PostApiAuthSignUpResponses];

export type PostApiAuthSignInData = {
  body?: LocalSignInRequestDto;
  path?: never;
  query?: never;
  url: '/api/auth/sign-in';
};

export type PostApiAuthSignInErrors = {
  /**
   * Bad Request
   */
  400: ProblemDetails;
  /**
   * Unauthorized
   */
  401: ProblemDetails;
};

export type PostApiAuthSignInError = PostApiAuthSignInErrors[keyof PostApiAuthSignInErrors];

export type PostApiAuthSignInResponses = {
  /**
   * OK
   */
  200: SignInResponseDto;
};

export type PostApiAuthSignInResponse = PostApiAuthSignInResponses[keyof PostApiAuthSignInResponses];

export type PostApiAuthGoogleData = {
  body?: GoogleIdTokenRequestDto;
  path?: never;
  query?: never;
  url: '/api/auth/google';
};

export type PostApiAuthGoogleErrors = {
  /**
   * Bad Request
   */
  400: ProblemDetails;
  /**
   * Unauthorized
   */
  401: ProblemDetails;
};

export type PostApiAuthGoogleError = PostApiAuthGoogleErrors[keyof PostApiAuthGoogleErrors];

export type PostApiAuthGoogleResponses = {
  /**
   * OK
   */
  200: SignInResponseDto;
};

export type PostApiAuthGoogleResponse = PostApiAuthGoogleResponses[keyof PostApiAuthGoogleResponses];

export type PostApiAuthRefreshData = {
  body?: RefreshTokenRequestDto;
  path?: never;
  query?: never;
  url: '/api/auth/refresh';
};

export type PostApiAuthRefreshErrors = {
  /**
   * Bad Request
   */
  400: ProblemDetails;
  /**
   * Unauthorized
   */
  401: ProblemDetails;
};

export type PostApiAuthRefreshError = PostApiAuthRefreshErrors[keyof PostApiAuthRefreshErrors];

export type PostApiAuthRefreshResponses = {
  /**
   * OK
   */
  200: SignInResponseDto;
};

export type PostApiAuthRefreshResponse = PostApiAuthRefreshResponses[keyof PostApiAuthRefreshResponses];

export type PostApiAuthRevokeData = {
  body?: RevokeTokenRequestDto;
  path?: never;
  query?: never;
  url: '/api/auth/revoke';
};

export type PostApiAuthRevokeErrors = {
  /**
   * Bad Request
   */
  400: ProblemDetails;
  /**
   * Unauthorized
   */
  401: ProblemDetails;
};

export type PostApiAuthRevokeError = PostApiAuthRevokeErrors[keyof PostApiAuthRevokeErrors];

export type PostApiAuthRevokeResponses = {
  /**
   * No Content
   */
  204: void;
};

export type PostApiAuthRevokeResponse = PostApiAuthRevokeResponses[keyof PostApiAuthRevokeResponses];

export type GetApiAuthProfileData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/auth/profile';
};

export type GetApiAuthProfileErrors = {
  /**
   * Unauthorized
   */
  401: ProblemDetails;
};

export type GetApiAuthProfileError = GetApiAuthProfileErrors[keyof GetApiAuthProfileErrors];

export type GetApiAuthProfileResponses = {
  /**
   * OK
   */
  200: UserProfileDto;
};

export type GetApiAuthProfileResponse = GetApiAuthProfileResponses[keyof GetApiAuthProfileResponses];

export type PostApiContentinteractionStartData = {
  body?: StartContentRequest;
  path?: never;
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/start';
};

export type PostApiContentinteractionStartResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type PostApiContentinteractionStartResponse = PostApiContentinteractionStartResponses[keyof PostApiContentinteractionStartResponses];

export type PutApiContentinteractionByInteractionIdProgressData = {
  body?: UpdateProgressRequest;
  path: {
    interactionId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/{interactionId}/progress';
};

export type PutApiContentinteractionByInteractionIdProgressResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type PutApiContentinteractionByInteractionIdProgressResponse = PutApiContentinteractionByInteractionIdProgressResponses[keyof PutApiContentinteractionByInteractionIdProgressResponses];

export type PostApiContentinteractionByInteractionIdSubmitData = {
  body?: SubmitContentRequest;
  path: {
    interactionId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/{interactionId}/submit';
};

export type PostApiContentinteractionByInteractionIdSubmitResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type PostApiContentinteractionByInteractionIdSubmitResponse = PostApiContentinteractionByInteractionIdSubmitResponses[keyof PostApiContentinteractionByInteractionIdSubmitResponses];

export type PostApiContentinteractionByInteractionIdCompleteData = {
  body?: CompleteContentRequest;
  path: {
    interactionId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/{interactionId}/complete';
};

export type PostApiContentinteractionByInteractionIdCompleteResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type PostApiContentinteractionByInteractionIdCompleteResponse = PostApiContentinteractionByInteractionIdCompleteResponses[keyof PostApiContentinteractionByInteractionIdCompleteResponses];

export type GetApiContentinteractionUserByProgramUserIdContentByContentIdData = {
  body?: never;
  path: {
    programUserId: string;
    contentId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/user/{programUserId}/content/{contentId}';
};

export type GetApiContentinteractionUserByProgramUserIdContentByContentIdResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type GetApiContentinteractionUserByProgramUserIdContentByContentIdResponse = GetApiContentinteractionUserByProgramUserIdContentByContentIdResponses[keyof GetApiContentinteractionUserByProgramUserIdContentByContentIdResponses];

export type GetApiContentinteractionUserByProgramUserIdData = {
  body?: never;
  path: {
    programUserId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/user/{programUserId}';
};

export type GetApiContentinteractionUserByProgramUserIdResponses = {
  /**
   * OK
   */
  200: Array<ContentInteractionDto>;
};

export type GetApiContentinteractionUserByProgramUserIdResponse = GetApiContentinteractionUserByProgramUserIdResponses[keyof GetApiContentinteractionUserByProgramUserIdResponses];

export type PutApiContentinteractionByInteractionIdTimeSpentData = {
  body?: UpdateTimeSpentRequest;
  path: {
    interactionId: string;
  };
  query?: {
    programId?: string;
  };
  url: '/api/contentinteraction/{interactionId}/time-spent';
};

export type PutApiContentinteractionByInteractionIdTimeSpentResponses = {
  /**
   * OK
   */
  200: ContentInteractionDto;
};

export type PutApiContentinteractionByInteractionIdTimeSpentResponse = PutApiContentinteractionByInteractionIdTimeSpentResponses[keyof PutApiContentinteractionByInteractionIdTimeSpentResponses];

export type GetCredentialsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/credentials';
};

export type GetCredentialsResponses = {
  /**
   * OK
   */
  200: Array<CredentialResponseDto>;
};

export type GetCredentialsResponse = GetCredentialsResponses[keyof GetCredentialsResponses];

export type PostCredentialsData = {
  body?: CreateCredentialDto;
  path?: never;
  query?: never;
  url: '/credentials';
};

export type PostCredentialsResponses = {
  /**
   * OK
   */
  200: CredentialResponseDto;
};

export type PostCredentialsResponse = PostCredentialsResponses[keyof PostCredentialsResponses];

export type GetCredentialsUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/credentials/user/{userId}';
};

export type GetCredentialsUserByUserIdResponses = {
  /**
   * OK
   */
  200: Array<CredentialResponseDto>;
};

export type GetCredentialsUserByUserIdResponse = GetCredentialsUserByUserIdResponses[keyof GetCredentialsUserByUserIdResponses];

export type DeleteCredentialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}';
};

export type DeleteCredentialsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetCredentialsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}';
};

export type GetCredentialsByIdResponses = {
  /**
   * OK
   */
  200: CredentialResponseDto;
};

export type GetCredentialsByIdResponse = GetCredentialsByIdResponses[keyof GetCredentialsByIdResponses];

export type PutCredentialsByIdData = {
  body?: UpdateCredentialDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}';
};

export type PutCredentialsByIdResponses = {
  /**
   * OK
   */
  200: CredentialResponseDto;
};

export type PutCredentialsByIdResponse = PutCredentialsByIdResponses[keyof PutCredentialsByIdResponses];

export type GetCredentialsUserByUserIdTypeByTypeData = {
  body?: never;
  path: {
    userId: string;
    type: string;
  };
  query?: never;
  url: '/credentials/user/{userId}/type/{type}';
};

export type GetCredentialsUserByUserIdTypeByTypeResponses = {
  /**
   * OK
   */
  200: CredentialResponseDto;
};

export type GetCredentialsUserByUserIdTypeByTypeResponse = GetCredentialsUserByUserIdTypeByTypeResponses[keyof GetCredentialsUserByUserIdTypeByTypeResponses];

export type PostCredentialsByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}/restore';
};

export type PostCredentialsByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type DeleteCredentialsByIdHardData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}/hard';
};

export type DeleteCredentialsByIdHardResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostCredentialsByIdMarkUsedData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}/mark-used';
};

export type PostCredentialsByIdMarkUsedResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostCredentialsByIdDeactivateData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}/deactivate';
};

export type PostCredentialsByIdDeactivateResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostCredentialsByIdActivateData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/credentials/{id}/activate';
};

export type PostCredentialsByIdActivateResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetCredentialsDeletedData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/credentials/deleted';
};

export type GetCredentialsDeletedResponses = {
  /**
   * OK
   */
  200: Array<CredentialResponseDto>;
};

export type GetCredentialsDeletedResponse = GetCredentialsDeletedResponses[keyof GetCredentialsDeletedResponses];

export type GetHealthData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/health';
};

export type GetHealthResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetHealthDatabaseData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/health/database';
};

export type GetHealthDatabaseResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiModulePermissionsCheckData = {
  body?: never;
  path?: never;
  query?: {
    module?: ModuleType;
    action?: ModuleAction;
    tenantId?: string;
    resourceId?: string;
  };
  url: '/api/module-permissions/check';
};

export type GetApiModulePermissionsCheckResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsCheckResponse = GetApiModulePermissionsCheckResponses[keyof GetApiModulePermissionsCheckResponses];

export type GetApiModulePermissionsMyPermissionsData = {
  body?: never;
  path?: never;
  query?: {
    module?: ModuleType;
    tenantId?: string;
  };
  url: '/api/module-permissions/my-permissions';
};

export type GetApiModulePermissionsMyPermissionsResponses = {
  /**
   * OK
   */
  200: Array<ModulePermission>;
};

export type GetApiModulePermissionsMyPermissionsResponse = GetApiModulePermissionsMyPermissionsResponses[keyof GetApiModulePermissionsMyPermissionsResponses];

export type GetApiModulePermissionsUsersByUserIdPermissionsData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    module?: ModuleType;
    tenantId?: string;
  };
  url: '/api/module-permissions/users/{userId}/permissions';
};

export type GetApiModulePermissionsUsersByUserIdPermissionsResponses = {
  /**
   * OK
   */
  200: Array<ModulePermission>;
};

export type GetApiModulePermissionsUsersByUserIdPermissionsResponse = GetApiModulePermissionsUsersByUserIdPermissionsResponses[keyof GetApiModulePermissionsUsersByUserIdPermissionsResponses];

export type GetApiModulePermissionsUsersWithPermissionData = {
  body?: never;
  path?: never;
  query?: {
    module?: ModuleType;
    action?: ModuleAction;
    tenantId?: string;
  };
  url: '/api/module-permissions/users-with-permission';
};

export type GetApiModulePermissionsUsersWithPermissionResponses = {
  /**
   * OK
   */
  200: Array<string>;
};

export type GetApiModulePermissionsUsersWithPermissionResponse = GetApiModulePermissionsUsersWithPermissionResponses[keyof GetApiModulePermissionsUsersWithPermissionResponses];

export type PostApiModulePermissionsAssignRoleData = {
  body?: AssignRoleRequest;
  path?: never;
  query?: never;
  url: '/api/module-permissions/assign-role';
};

export type PostApiModulePermissionsAssignRoleResponses = {
  /**
   * OK
   */
  200: UserRoleAssignment;
};

export type PostApiModulePermissionsAssignRoleResponse = PostApiModulePermissionsAssignRoleResponses[keyof PostApiModulePermissionsAssignRoleResponses];

export type DeleteApiModulePermissionsRevokeRoleData = {
  body?: RevokeRoleRequest;
  path?: never;
  query?: never;
  url: '/api/module-permissions/revoke-role';
};

export type DeleteApiModulePermissionsRevokeRoleResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiModulePermissionsUsersByUserIdRolesData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    module?: ModuleType;
    tenantId?: string;
  };
  url: '/api/module-permissions/users/{userId}/roles';
};

export type GetApiModulePermissionsUsersByUserIdRolesResponses = {
  /**
   * OK
   */
  200: Array<UserRoleAssignment>;
};

export type GetApiModulePermissionsUsersByUserIdRolesResponse = GetApiModulePermissionsUsersByUserIdRolesResponses[keyof GetApiModulePermissionsUsersByUserIdRolesResponses];

export type GetApiModulePermissionsRolesByRoleNameUsersData = {
  body?: never;
  path: {
    roleName: string;
  };
  query?: {
    module?: ModuleType;
    tenantId?: string;
  };
  url: '/api/module-permissions/roles/{roleName}/users';
};

export type GetApiModulePermissionsRolesByRoleNameUsersResponses = {
  /**
   * OK
   */
  200: Array<UserRoleAssignment>;
};

export type GetApiModulePermissionsRolesByRoleNameUsersResponse = GetApiModulePermissionsRolesByRoleNameUsersResponses[keyof GetApiModulePermissionsRolesByRoleNameUsersResponses];

export type GetApiModulePermissionsTestingLabMyPermissionsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/my-permissions';
};

export type GetApiModulePermissionsTestingLabMyPermissionsResponses = {
  /**
   * OK
   */
  200: TestingLabPermissions;
};

export type GetApiModulePermissionsTestingLabMyPermissionsResponse = GetApiModulePermissionsTestingLabMyPermissionsResponses[keyof GetApiModulePermissionsTestingLabMyPermissionsResponses];

export type GetApiModulePermissionsTestingLabUsersByUserIdPermissionsData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/users/{userId}/permissions';
};

export type GetApiModulePermissionsTestingLabUsersByUserIdPermissionsResponses = {
  /**
   * OK
   */
  200: TestingLabPermissions;
};

export type GetApiModulePermissionsTestingLabUsersByUserIdPermissionsResponse = GetApiModulePermissionsTestingLabUsersByUserIdPermissionsResponses[keyof GetApiModulePermissionsTestingLabUsersByUserIdPermissionsResponses];

export type GetApiModulePermissionsTestingLabCanCreateSessionsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/can-create-sessions';
};

export type GetApiModulePermissionsTestingLabCanCreateSessionsResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsTestingLabCanCreateSessionsResponse = GetApiModulePermissionsTestingLabCanCreateSessionsResponses[keyof GetApiModulePermissionsTestingLabCanCreateSessionsResponses];

export type GetApiModulePermissionsTestingLabCanDeleteSessionsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/can-delete-sessions';
};

export type GetApiModulePermissionsTestingLabCanDeleteSessionsResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsTestingLabCanDeleteSessionsResponse = GetApiModulePermissionsTestingLabCanDeleteSessionsResponses[keyof GetApiModulePermissionsTestingLabCanDeleteSessionsResponses];

export type GetApiModulePermissionsTestingLabCanManageTestersData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/can-manage-testers';
};

export type GetApiModulePermissionsTestingLabCanManageTestersResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsTestingLabCanManageTestersResponse = GetApiModulePermissionsTestingLabCanManageTestersResponses[keyof GetApiModulePermissionsTestingLabCanManageTestersResponses];

export type GetApiModulePermissionsTestingLabCanViewReportsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/can-view-reports';
};

export type GetApiModulePermissionsTestingLabCanViewReportsResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsTestingLabCanViewReportsResponse = GetApiModulePermissionsTestingLabCanViewReportsResponses[keyof GetApiModulePermissionsTestingLabCanViewReportsResponses];

export type GetApiModulePermissionsTestingLabCanExportDataData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/module-permissions/testing-lab/can-export-data';
};

export type GetApiModulePermissionsTestingLabCanExportDataResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiModulePermissionsTestingLabCanExportDataResponse = GetApiModulePermissionsTestingLabCanExportDataResponses[keyof GetApiModulePermissionsTestingLabCanExportDataResponses];

export type GetApiModulePermissionsModulesByModuleRolesData = {
  body?: never;
  path: {
    module: ModuleType;
  };
  query?: never;
  url: '/api/module-permissions/modules/{module}/roles';
};

export type GetApiModulePermissionsModulesByModuleRolesResponses = {
  /**
   * OK
   */
  200: Array<ModuleRole>;
};

export type GetApiModulePermissionsModulesByModuleRolesResponse = GetApiModulePermissionsModulesByModuleRolesResponses[keyof GetApiModulePermissionsModulesByModuleRolesResponses];

export type PostApiModulePermissionsModulesByModuleRolesData = {
  body?: CreateRoleRequest;
  path: {
    module: ModuleType;
  };
  query?: never;
  url: '/api/module-permissions/modules/{module}/roles';
};

export type PostApiModulePermissionsModulesByModuleRolesResponses = {
  /**
   * OK
   */
  200: ModuleRole;
};

export type PostApiModulePermissionsModulesByModuleRolesResponse = PostApiModulePermissionsModulesByModuleRolesResponses[keyof PostApiModulePermissionsModulesByModuleRolesResponses];

export type DeleteApiModulePermissionsModulesByModuleRolesByRoleNameData = {
  body?: never;
  path: {
    module: ModuleType;
    roleName: string;
  };
  query?: never;
  url: '/api/module-permissions/modules/{module}/roles/{roleName}';
};

export type DeleteApiModulePermissionsModulesByModuleRolesByRoleNameResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PutApiModulePermissionsModulesByModuleRolesByRoleNameData = {
  body?: UpdateRoleRequest;
  path: {
    module: ModuleType;
    roleName: string;
  };
  query?: never;
  url: '/api/module-permissions/modules/{module}/roles/{roleName}';
};

export type PutApiModulePermissionsModulesByModuleRolesByRoleNameResponses = {
  /**
   * OK
   */
  200: ModuleRole;
};

export type PutApiModulePermissionsModulesByModuleRolesByRoleNameResponse = PutApiModulePermissionsModulesByModuleRolesByRoleNameResponses[keyof PutApiModulePermissionsModulesByModuleRolesByRoleNameResponses];

export type GetApiPaymentMethodsMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/payment/methods/me';
};

export type GetApiPaymentMethodsMeResponses = {
  /**
   * OK
   */
  200: Array<UserFinancialMethod>;
};

export type GetApiPaymentMethodsMeResponse = GetApiPaymentMethodsMeResponses[keyof GetApiPaymentMethodsMeResponses];

export type PostApiPaymentIntentData = {
  body?: CreatePaymentCommand;
  path?: never;
  query?: never;
  url: '/api/payment/intent';
};

export type PostApiPaymentIntentResponses = {
  /**
   * OK
   */
  200: Payment;
};

export type PostApiPaymentIntentResponse = PostApiPaymentIntentResponses[keyof PostApiPaymentIntentResponses];

export type PostApiPaymentByIdProcessData = {
  body?: ProcessPaymentRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payment/{id}/process';
};

export type PostApiPaymentByIdProcessResponses = {
  /**
   * OK
   */
  200: Payment;
};

export type PostApiPaymentByIdProcessResponse = PostApiPaymentByIdProcessResponses[keyof PostApiPaymentByIdProcessResponses];

export type PostApiPaymentByIdRefundData = {
  body?: RefundPaymentRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payment/{id}/refund';
};

export type PostApiPaymentByIdRefundResponses = {
  /**
   * OK
   */
  200: PaymentRefund;
};

export type PostApiPaymentByIdRefundResponse = PostApiPaymentByIdRefundResponses[keyof PostApiPaymentByIdRefundResponses];

export type GetApiPaymentByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payment/{id}';
};

export type GetApiPaymentByIdResponses = {
  /**
   * OK
   */
  200: Payment;
};

export type GetApiPaymentByIdResponse = GetApiPaymentByIdResponses[keyof GetApiPaymentByIdResponses];

export type GetApiPaymentUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/api/payment/user/{userId}';
};

export type GetApiPaymentUserByUserIdResponses = {
  /**
   * OK
   */
  200: Array<Payment>;
};

export type GetApiPaymentUserByUserIdResponse = GetApiPaymentUserByUserIdResponses[keyof GetApiPaymentUserByUserIdResponses];

export type GetApiPaymentStatsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/payment/stats';
};

export type GetApiPaymentStatsResponses = {
  /**
   * OK
   */
  200: PaymentStats;
};

export type GetApiPaymentStatsResponse = GetApiPaymentStatsResponses[keyof GetApiPaymentStatsResponses];

export type PostApiPaymentsData = {
  body?: CreatePaymentRequest;
  path?: never;
  query?: never;
  url: '/api/payments';
};

export type PostApiPaymentsResponses = {
  /**
   * OK
   */
  200: CreatePaymentResult;
};

export type PostApiPaymentsResponse = PostApiPaymentsResponses[keyof PostApiPaymentsResponses];

export type GetApiPaymentsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payments/{id}';
};

export type GetApiPaymentsByIdResponses = {
  /**
   * OK
   */
  200: Payment;
};

export type GetApiPaymentsByIdResponse = GetApiPaymentsByIdResponses[keyof GetApiPaymentsByIdResponses];

export type GetApiPaymentsMyPaymentsData = {
  body?: never;
  path?: never;
  query?: {
    status?: PaymentStatus;
    fromDate?: string;
    toDate?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/payments/my-payments';
};

export type GetApiPaymentsMyPaymentsResponses = {
  /**
   * OK
   */
  200: Array<Payment>;
};

export type GetApiPaymentsMyPaymentsResponse = GetApiPaymentsMyPaymentsResponses[keyof GetApiPaymentsMyPaymentsResponses];

export type GetApiPaymentsUsersByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    status?: PaymentStatus;
    fromDate?: string;
    toDate?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/payments/users/{userId}';
};

export type GetApiPaymentsUsersByUserIdResponses = {
  /**
   * OK
   */
  200: Array<Payment>;
};

export type GetApiPaymentsUsersByUserIdResponse = GetApiPaymentsUsersByUserIdResponses[keyof GetApiPaymentsUsersByUserIdResponses];

export type GetApiPaymentsProductsByProductIdData = {
  body?: never;
  path: {
    productId: string;
  };
  query?: {
    status?: PaymentStatus;
    fromDate?: string;
    toDate?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/payments/products/{productId}';
};

export type GetApiPaymentsProductsByProductIdResponses = {
  /**
   * OK
   */
  200: Array<Payment>;
};

export type GetApiPaymentsProductsByProductIdResponse = GetApiPaymentsProductsByProductIdResponses[keyof GetApiPaymentsProductsByProductIdResponses];

export type PostApiPaymentsByIdProcessData = {
  body?: ProcessPaymentRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payments/{id}/process';
};

export type PostApiPaymentsByIdProcessResponses = {
  /**
   * OK
   */
  200: ProcessPaymentResult;
};

export type PostApiPaymentsByIdProcessResponse = PostApiPaymentsByIdProcessResponses[keyof PostApiPaymentsByIdProcessResponses];

export type PostApiPaymentsByIdRefundData = {
  body?: RefundPaymentRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payments/{id}/refund';
};

export type PostApiPaymentsByIdRefundResponses = {
  /**
   * OK
   */
  200: RefundPaymentResult;
};

export type PostApiPaymentsByIdRefundResponse = PostApiPaymentsByIdRefundResponses[keyof PostApiPaymentsByIdRefundResponses];

export type PostApiPaymentsByIdCancelData = {
  body?: CancelPaymentRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/payments/{id}/cancel';
};

export type PostApiPaymentsByIdCancelResponses = {
  /**
   * OK
   */
  200: CancelPaymentResult;
};

export type PostApiPaymentsByIdCancelResponse = PostApiPaymentsByIdCancelResponses[keyof PostApiPaymentsByIdCancelResponses];

export type GetApiPaymentsStatsData = {
  body?: never;
  path?: never;
  query?: {
    userId?: string;
    productId?: string;
    fromDate?: string;
    toDate?: string;
  };
  url: '/api/payments/stats';
};

export type GetApiPaymentsStatsResponses = {
  /**
   * OK
   */
  200: PaymentStats;
};

export type GetApiPaymentsStatsResponse = GetApiPaymentsStatsResponses[keyof GetApiPaymentsStatsResponses];

export type GetApiPaymentsRevenueReportData = {
  body?: never;
  path?: never;
  query?: {
    fromDate?: string;
    toDate?: string;
    groupBy?: string;
    productId?: string;
  };
  url: '/api/payments/revenue-report';
};

export type GetApiPaymentsRevenueReportResponses = {
  /**
   * OK
   */
  200: RevenueReport;
};

export type GetApiPaymentsRevenueReportResponse = GetApiPaymentsRevenueReportResponses[keyof GetApiPaymentsRevenueReportResponses];

export type GetApiPostsData = {
  body?: never;
  path?: never;
  query?: {
    pageNumber?: number;
    pageSize?: number;
    postType?: string;
    userId?: string;
    isPinned?: boolean;
    searchTerm?: string;
    orderBy?: string;
    descending?: boolean;
    tenantId?: string;
  };
  url: '/api/posts';
};

export type GetApiPostsResponses = {
  /**
   * OK
   */
  200: PostsPageDto;
};

export type GetApiPostsResponse = GetApiPostsResponses[keyof GetApiPostsResponses];

export type PostApiPostsData = {
  body?: CreatePostDto;
  path?: never;
  query?: never;
  url: '/api/posts';
};

export type PostApiPostsResponses = {
  /**
   * OK
   */
  200: PostDto;
};

export type PostApiPostsResponse = PostApiPostsResponses[keyof PostApiPostsResponses];

export type GetApiPostsByPostIdData = {
  body?: never;
  path: {
    postId: string;
  };
  query?: never;
  url: '/api/posts/{postId}';
};

export type GetApiPostsByPostIdResponses = {
  /**
   * OK
   */
  200: PostDto;
};

export type GetApiPostsByPostIdResponse = GetApiPostsByPostIdResponses[keyof GetApiPostsByPostIdResponses];

export type GetApiProductData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/product';
};

export type GetApiProductResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductResponse = GetApiProductResponses[keyof GetApiProductResponses];

export type PostApiProductData = {
  body?: CreateProductCommand;
  path?: never;
  query?: never;
  url: '/api/product';
};

export type PostApiProductResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PostApiProductResponse = PostApiProductResponses[keyof PostApiProductResponses];

export type DeleteApiProductByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}';
};

export type DeleteApiProductByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProductByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}';
};

export type GetApiProductByIdResponses = {
  /**
   * OK
   */
  200: Product;
};

export type GetApiProductByIdResponse = GetApiProductByIdResponses[keyof GetApiProductByIdResponses];

export type PutApiProductByIdData = {
  body?: UpdateProductCommand;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}';
};

export type PutApiProductByIdResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PutApiProductByIdResponse = PutApiProductByIdResponses[keyof PutApiProductByIdResponses];

export type GetApiProductTypeByTypeData = {
  body?: never;
  path: {
    type: ProductType;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/product/type/{type}';
};

export type GetApiProductTypeByTypeResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductTypeByTypeResponse = GetApiProductTypeByTypeResponses[keyof GetApiProductTypeByTypeResponses];

export type GetApiProductPublishedData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/product/published';
};

export type GetApiProductPublishedResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductPublishedResponse = GetApiProductPublishedResponses[keyof GetApiProductPublishedResponses];

export type GetApiProductSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/product/search';
};

export type GetApiProductSearchResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductSearchResponse = GetApiProductSearchResponses[keyof GetApiProductSearchResponses];

export type GetApiProductCreatorByCreatorIdData = {
  body?: never;
  path: {
    creatorId: string;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/product/creator/{creatorId}';
};

export type GetApiProductCreatorByCreatorIdResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductCreatorByCreatorIdResponse = GetApiProductCreatorByCreatorIdResponses[keyof GetApiProductCreatorByCreatorIdResponses];

export type GetApiProductPriceRangeData = {
  body?: never;
  path?: never;
  query?: {
    minPrice?: number;
    maxPrice?: number;
    currency?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/product/price-range';
};

export type GetApiProductPriceRangeResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductPriceRangeResponse = GetApiProductPriceRangeResponses[keyof GetApiProductPriceRangeResponses];

export type GetApiProductPopularData = {
  body?: never;
  path?: never;
  query?: {
    count?: number;
  };
  url: '/api/product/popular';
};

export type GetApiProductPopularResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductPopularResponse = GetApiProductPopularResponses[keyof GetApiProductPopularResponses];

export type GetApiProductRecentData = {
  body?: never;
  path?: never;
  query?: {
    count?: number;
  };
  url: '/api/product/recent';
};

export type GetApiProductRecentResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductRecentResponse = GetApiProductRecentResponses[keyof GetApiProductRecentResponses];

export type PostApiProductByIdPublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/publish';
};

export type PostApiProductByIdPublishResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PostApiProductByIdPublishResponse = PostApiProductByIdPublishResponses[keyof PostApiProductByIdPublishResponses];

export type PostApiProductByIdUnpublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/unpublish';
};

export type PostApiProductByIdUnpublishResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PostApiProductByIdUnpublishResponse = PostApiProductByIdUnpublishResponses[keyof PostApiProductByIdUnpublishResponses];

export type PostApiProductByIdArchiveData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/archive';
};

export type PostApiProductByIdArchiveResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PostApiProductByIdArchiveResponse = PostApiProductByIdArchiveResponses[keyof PostApiProductByIdArchiveResponses];

export type PutApiProductByIdVisibilityData = {
  body?: AccessLevel;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/visibility';
};

export type PutApiProductByIdVisibilityResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PutApiProductByIdVisibilityResponse = PutApiProductByIdVisibilityResponses[keyof PutApiProductByIdVisibilityResponses];

export type GetApiProductByIdBundleItemsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/bundle-items';
};

export type GetApiProductByIdBundleItemsResponses = {
  /**
   * OK
   */
  200: Array<Product>;
};

export type GetApiProductByIdBundleItemsResponse = GetApiProductByIdBundleItemsResponses[keyof GetApiProductByIdBundleItemsResponses];

export type DeleteApiProductByBundleIdBundleItemsByProductIdData = {
  body?: never;
  path: {
    bundleId: string;
    productId: string;
  };
  query?: never;
  url: '/api/product/{bundleId}/bundle-items/{productId}';
};

export type DeleteApiProductByBundleIdBundleItemsByProductIdResponses = {
  /**
   * OK
   */
  200: Product;
};

export type DeleteApiProductByBundleIdBundleItemsByProductIdResponse = DeleteApiProductByBundleIdBundleItemsByProductIdResponses[keyof DeleteApiProductByBundleIdBundleItemsByProductIdResponses];

export type PostApiProductByBundleIdBundleItemsByProductIdData = {
  body?: never;
  path: {
    bundleId: string;
    productId: string;
  };
  query?: never;
  url: '/api/product/{bundleId}/bundle-items/{productId}';
};

export type PostApiProductByBundleIdBundleItemsByProductIdResponses = {
  /**
   * OK
   */
  200: Product;
};

export type PostApiProductByBundleIdBundleItemsByProductIdResponse = PostApiProductByBundleIdBundleItemsByProductIdResponses[keyof PostApiProductByBundleIdBundleItemsByProductIdResponses];

export type GetApiProductByIdPricingCurrentData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/pricing/current';
};

export type GetApiProductByIdPricingCurrentResponses = {
  /**
   * OK
   */
  200: ProductPricing;
};

export type GetApiProductByIdPricingCurrentResponse = GetApiProductByIdPricingCurrentResponses[keyof GetApiProductByIdPricingCurrentResponses];

export type GetApiProductByIdPricingHistoryData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/pricing/history';
};

export type GetApiProductByIdPricingHistoryResponses = {
  /**
   * OK
   */
  200: Array<ProductPricing>;
};

export type GetApiProductByIdPricingHistoryResponse = GetApiProductByIdPricingHistoryResponses[keyof GetApiProductByIdPricingHistoryResponses];

export type PostApiProductByIdPricingData = {
  body?: SetPricingRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/pricing';
};

export type PostApiProductByIdPricingResponses = {
  /**
   * OK
   */
  200: ProductPricing;
};

export type PostApiProductByIdPricingResponse = PostApiProductByIdPricingResponses[keyof PostApiProductByIdPricingResponses];

export type GetApiProductByIdSubscriptionPlansData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/subscription-plans';
};

export type GetApiProductByIdSubscriptionPlansResponses = {
  /**
   * OK
   */
  200: Array<ProductSubscriptionPlan>;
};

export type GetApiProductByIdSubscriptionPlansResponse = GetApiProductByIdSubscriptionPlansResponses[keyof GetApiProductByIdSubscriptionPlansResponses];

export type PostApiProductByIdSubscriptionPlansData = {
  body?: ProductSubscriptionPlan;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/subscription-plans';
};

export type PostApiProductByIdSubscriptionPlansResponses = {
  /**
   * OK
   */
  200: ProductSubscriptionPlan;
};

export type PostApiProductByIdSubscriptionPlansResponse = PostApiProductByIdSubscriptionPlansResponses[keyof PostApiProductByIdSubscriptionPlansResponses];

export type GetApiProductSubscriptionPlansByPlanIdData = {
  body?: never;
  path: {
    planId: string;
  };
  query?: never;
  url: '/api/product/subscription-plans/{planId}';
};

export type GetApiProductSubscriptionPlansByPlanIdResponses = {
  /**
   * OK
   */
  200: ProductSubscriptionPlan;
};

export type GetApiProductSubscriptionPlansByPlanIdResponse = GetApiProductSubscriptionPlansByPlanIdResponses[keyof GetApiProductSubscriptionPlansByPlanIdResponses];

export type DeleteApiProductByIdAccessByUserIdData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/product/{id}/access/{userId}';
};

export type DeleteApiProductByIdAccessByUserIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProductByIdAccessByUserIdData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/product/{id}/access/{userId}';
};

export type GetApiProductByIdAccessByUserIdResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetApiProductByIdAccessByUserIdResponse = GetApiProductByIdAccessByUserIdResponses[keyof GetApiProductByIdAccessByUserIdResponses];

export type PostApiProductByIdAccessByUserIdData = {
  body?: GrantAccessRequest;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/product/{id}/access/{userId}';
};

export type PostApiProductByIdAccessByUserIdResponses = {
  /**
   * OK
   */
  200: UserProduct;
};

export type PostApiProductByIdAccessByUserIdResponse = PostApiProductByIdAccessByUserIdResponses[keyof PostApiProductByIdAccessByUserIdResponses];

export type GetApiProductByIdUserProductByUserIdData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/product/{id}/user-product/{userId}';
};

export type GetApiProductByIdUserProductByUserIdResponses = {
  /**
   * OK
   */
  200: UserProduct;
};

export type GetApiProductByIdUserProductByUserIdResponse = GetApiProductByIdUserProductByUserIdResponses[keyof GetApiProductByIdUserProductByUserIdResponses];

export type GetApiProductAnalyticsCountData = {
  body?: never;
  path?: never;
  query?: {
    type?: ProductType;
    status?: ContentStatus;
  };
  url: '/api/product/analytics/count';
};

export type GetApiProductAnalyticsCountResponses = {
  /**
   * OK
   */
  200: number;
};

export type GetApiProductAnalyticsCountResponse = GetApiProductAnalyticsCountResponses[keyof GetApiProductAnalyticsCountResponses];

export type GetApiProductByIdAnalyticsUserCountData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/analytics/user-count';
};

export type GetApiProductByIdAnalyticsUserCountResponses = {
  /**
   * OK
   */
  200: number;
};

export type GetApiProductByIdAnalyticsUserCountResponse = GetApiProductByIdAnalyticsUserCountResponses[keyof GetApiProductByIdAnalyticsUserCountResponses];

export type GetApiProductByIdAnalyticsRevenueData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/product/{id}/analytics/revenue';
};

export type GetApiProductByIdAnalyticsRevenueResponses = {
  /**
   * OK
   */
  200: number;
};

export type GetApiProductByIdAnalyticsRevenueResponse = GetApiProductByIdAnalyticsRevenueResponses[keyof GetApiProductByIdAnalyticsRevenueResponses];

export type GetApiProgramData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program';
};

export type GetApiProgramResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramResponse = GetApiProgramResponses[keyof GetApiProgramResponses];

export type PostApiProgramData = {
  body?: CreateProgramDto;
  path?: never;
  query?: never;
  url: '/api/program';
};

export type PostApiProgramResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramResponse = PostApiProgramResponses[keyof PostApiProgramResponses];

export type GetApiProgramPublishedData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program/published';
};

export type GetApiProgramPublishedResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramPublishedResponse = GetApiProgramPublishedResponses[keyof GetApiProgramPublishedResponses];

export type GetApiProgramCategoryByCategoryData = {
  body?: never;
  path: {
    category: ProgramCategory;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program/category/{category}';
};

export type GetApiProgramCategoryByCategoryResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramCategoryByCategoryResponse = GetApiProgramCategoryByCategoryResponses[keyof GetApiProgramCategoryByCategoryResponses];

export type GetApiProgramDifficultyByDifficultyData = {
  body?: never;
  path: {
    difficulty: ProgramDifficulty;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program/difficulty/{difficulty}';
};

export type GetApiProgramDifficultyByDifficultyResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramDifficultyByDifficultyResponse = GetApiProgramDifficultyByDifficultyResponses[keyof GetApiProgramDifficultyByDifficultyResponses];

export type GetApiProgramSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
    skip?: number;
    take?: number;
  };
  url: '/api/program/search';
};

export type GetApiProgramSearchResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramSearchResponse = GetApiProgramSearchResponses[keyof GetApiProgramSearchResponses];

export type GetApiProgramCreatorByCreatorIdData = {
  body?: never;
  path: {
    creatorId: string;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program/creator/{creatorId}';
};

export type GetApiProgramCreatorByCreatorIdResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramCreatorByCreatorIdResponse = GetApiProgramCreatorByCreatorIdResponses[keyof GetApiProgramCreatorByCreatorIdResponses];

export type GetApiProgramPopularData = {
  body?: never;
  path?: never;
  query?: {
    count?: number;
  };
  url: '/api/program/popular';
};

export type GetApiProgramPopularResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramPopularResponse = GetApiProgramPopularResponses[keyof GetApiProgramPopularResponses];

export type GetApiProgramRecentData = {
  body?: never;
  path?: never;
  query?: {
    count?: number;
  };
  url: '/api/program/recent';
};

export type GetApiProgramRecentResponses = {
  /**
   * OK
   */
  200: Array<Program>;
};

export type GetApiProgramRecentResponse = GetApiProgramRecentResponses[keyof GetApiProgramRecentResponses];

export type DeleteApiProgramByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}';
};

export type DeleteApiProgramByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProgramByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}';
};

export type GetApiProgramByIdResponses = {
  /**
   * OK
   */
  200: Program;
};

export type GetApiProgramByIdResponse = GetApiProgramByIdResponses[keyof GetApiProgramByIdResponses];

export type PutApiProgramByIdData = {
  body?: UpdateProgramDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}';
};

export type PutApiProgramByIdResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PutApiProgramByIdResponse = PutApiProgramByIdResponses[keyof PutApiProgramByIdResponses];

export type GetApiProgramByIdWithContentData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/with-content';
};

export type GetApiProgramByIdWithContentResponses = {
  /**
   * OK
   */
  200: Program;
};

export type GetApiProgramByIdWithContentResponse = GetApiProgramByIdWithContentResponses[keyof GetApiProgramByIdWithContentResponses];

export type PostApiProgramByIdCloneData = {
  body?: CloneProgramDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/clone';
};

export type PostApiProgramByIdCloneResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdCloneResponse = PostApiProgramByIdCloneResponses[keyof PostApiProgramByIdCloneResponses];

export type GetApiProgramSlugBySlugData = {
  body?: never;
  path: {
    slug: string;
  };
  query?: never;
  url: '/api/program/slug/{slug}';
};

export type GetApiProgramSlugBySlugResponses = {
  /**
   * OK
   */
  200: Program;
};

export type GetApiProgramSlugBySlugResponse = GetApiProgramSlugBySlugResponses[keyof GetApiProgramSlugBySlugResponses];

export type PostApiProgramByIdContentData = {
  body?: CreateContentDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/content';
};

export type PostApiProgramByIdContentResponses = {
  /**
   * OK
   */
  200: ProgramContent;
};

export type PostApiProgramByIdContentResponse = PostApiProgramByIdContentResponses[keyof PostApiProgramByIdContentResponses];

export type DeleteApiProgramByIdContentByContentIdData = {
  body?: never;
  path: {
    id: string;
    contentId: string;
  };
  query?: never;
  url: '/api/program/{id}/content/{contentId}';
};

export type DeleteApiProgramByIdContentByContentIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PutApiProgramByIdContentByContentIdData = {
  body?: UpdateContentDto;
  path: {
    id: string;
    contentId: string;
  };
  query?: never;
  url: '/api/program/{id}/content/{contentId}';
};

export type PutApiProgramByIdContentByContentIdResponses = {
  /**
   * OK
   */
  200: ProgramContent;
};

export type PutApiProgramByIdContentByContentIdResponse = PutApiProgramByIdContentByContentIdResponses[keyof PutApiProgramByIdContentByContentIdResponses];

export type PostApiProgramByIdContentReorderData = {
  body?: ReorderContentDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/content/reorder';
};

export type PostApiProgramByIdContentReorderResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type DeleteApiProgramByIdUsersByUserIdData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}';
};

export type DeleteApiProgramByIdUsersByUserIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiProgramByIdUsersByUserIdData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}';
};

export type PostApiProgramByIdUsersByUserIdResponses = {
  /**
   * OK
   */
  200: UserProgressDto;
};

export type PostApiProgramByIdUsersByUserIdResponse = PostApiProgramByIdUsersByUserIdResponses[keyof PostApiProgramByIdUsersByUserIdResponses];

export type GetApiProgramByIdUsersData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/api/program/{id}/users';
};

export type GetApiProgramByIdUsersResponses = {
  /**
   * OK
   */
  200: Array<UserProgressDto>;
};

export type GetApiProgramByIdUsersResponse = GetApiProgramByIdUsersResponses[keyof GetApiProgramByIdUsersResponses];

export type GetApiProgramByIdUsersByUserIdProgressData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}/progress';
};

export type GetApiProgramByIdUsersByUserIdProgressResponses = {
  /**
   * OK
   */
  200: UserProgressDto;
};

export type GetApiProgramByIdUsersByUserIdProgressResponse = GetApiProgramByIdUsersByUserIdProgressResponses[keyof GetApiProgramByIdUsersByUserIdProgressResponses];

export type PutApiProgramByIdUsersByUserIdProgressData = {
  body?: UpdateProgressDto;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}/progress';
};

export type PutApiProgramByIdUsersByUserIdProgressResponses = {
  /**
   * OK
   */
  200: UserProgressDto;
};

export type PutApiProgramByIdUsersByUserIdProgressResponse = PutApiProgramByIdUsersByUserIdProgressResponses[keyof PutApiProgramByIdUsersByUserIdProgressResponses];

export type PostApiProgramByIdUsersByUserIdContentByContentIdCompleteData = {
  body?: never;
  path: {
    id: string;
    userId: string;
    contentId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}/content/{contentId}/complete';
};

export type PostApiProgramByIdUsersByUserIdContentByContentIdCompleteResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiProgramByIdUsersByUserIdResetData = {
  body?: never;
  path: {
    id: string;
    userId: string;
  };
  query?: never;
  url: '/api/program/{id}/users/{userId}/reset';
};

export type PostApiProgramByIdUsersByUserIdResetResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiProgramByIdSubmitData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/submit';
};

export type PostApiProgramByIdSubmitResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdSubmitResponse = PostApiProgramByIdSubmitResponses[keyof PostApiProgramByIdSubmitResponses];

export type PostApiProgramByIdApproveData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/approve';
};

export type PostApiProgramByIdApproveResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdApproveResponse = PostApiProgramByIdApproveResponses[keyof PostApiProgramByIdApproveResponses];

export type PostApiProgramByIdRejectData = {
  body?: RejectProgramDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/reject';
};

export type PostApiProgramByIdRejectResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdRejectResponse = PostApiProgramByIdRejectResponses[keyof PostApiProgramByIdRejectResponses];

export type PostApiProgramByIdWithdrawData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/withdraw';
};

export type PostApiProgramByIdWithdrawResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdWithdrawResponse = PostApiProgramByIdWithdrawResponses[keyof PostApiProgramByIdWithdrawResponses];

export type PostApiProgramByIdArchiveData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/archive';
};

export type PostApiProgramByIdArchiveResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdArchiveResponse = PostApiProgramByIdArchiveResponses[keyof PostApiProgramByIdArchiveResponses];

export type PostApiProgramByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/restore';
};

export type PostApiProgramByIdRestoreResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdRestoreResponse = PostApiProgramByIdRestoreResponses[keyof PostApiProgramByIdRestoreResponses];

export type PostApiProgramByIdPublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/publish';
};

export type PostApiProgramByIdPublishResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdPublishResponse = PostApiProgramByIdPublishResponses[keyof PostApiProgramByIdPublishResponses];

export type PostApiProgramByIdUnpublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/unpublish';
};

export type PostApiProgramByIdUnpublishResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdUnpublishResponse = PostApiProgramByIdUnpublishResponses[keyof PostApiProgramByIdUnpublishResponses];

export type PostApiProgramByIdScheduleData = {
  body?: ScheduleProgramDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/schedule';
};

export type PostApiProgramByIdScheduleResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdScheduleResponse = PostApiProgramByIdScheduleResponses[keyof PostApiProgramByIdScheduleResponses];

export type PostApiProgramByIdMonetizeData = {
  body?: MonetizationDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/monetize';
};

export type PostApiProgramByIdMonetizeResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdMonetizeResponse = PostApiProgramByIdMonetizeResponses[keyof PostApiProgramByIdMonetizeResponses];

export type PostApiProgramByIdDisableMonetizationData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/disable-monetization';
};

export type PostApiProgramByIdDisableMonetizationResponses = {
  /**
   * OK
   */
  200: Program;
};

export type PostApiProgramByIdDisableMonetizationResponse = PostApiProgramByIdDisableMonetizationResponses[keyof PostApiProgramByIdDisableMonetizationResponses];

export type GetApiProgramByIdPricingData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/pricing';
};

export type GetApiProgramByIdPricingResponses = {
  /**
   * OK
   */
  200: PricingDto;
};

export type GetApiProgramByIdPricingResponse = GetApiProgramByIdPricingResponses[keyof GetApiProgramByIdPricingResponses];

export type PutApiProgramByIdPricingData = {
  body?: UpdatePricingDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/pricing';
};

export type PutApiProgramByIdPricingResponses = {
  /**
   * OK
   */
  200: PricingDto;
};

export type PutApiProgramByIdPricingResponse = PutApiProgramByIdPricingResponses[keyof PutApiProgramByIdPricingResponses];

export type GetApiProgramByIdAnalyticsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/analytics';
};

export type GetApiProgramByIdAnalyticsResponses = {
  /**
   * OK
   */
  200: ProgramAnalyticsDto;
};

export type GetApiProgramByIdAnalyticsResponse = GetApiProgramByIdAnalyticsResponses[keyof GetApiProgramByIdAnalyticsResponses];

export type GetApiProgramByIdAnalyticsCompletionRatesData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/analytics/completion-rates';
};

export type GetApiProgramByIdAnalyticsCompletionRatesResponses = {
  /**
   * OK
   */
  200: CompletionRatesDto;
};

export type GetApiProgramByIdAnalyticsCompletionRatesResponse = GetApiProgramByIdAnalyticsCompletionRatesResponses[keyof GetApiProgramByIdAnalyticsCompletionRatesResponses];

export type GetApiProgramByIdAnalyticsEngagementData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/analytics/engagement';
};

export type GetApiProgramByIdAnalyticsEngagementResponses = {
  /**
   * OK
   */
  200: EngagementMetricsDto;
};

export type GetApiProgramByIdAnalyticsEngagementResponse = GetApiProgramByIdAnalyticsEngagementResponses[keyof GetApiProgramByIdAnalyticsEngagementResponses];

export type GetApiProgramByIdAnalyticsRevenueData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/analytics/revenue';
};

export type GetApiProgramByIdAnalyticsRevenueResponses = {
  /**
   * OK
   */
  200: RevenueAnalyticsDto;
};

export type GetApiProgramByIdAnalyticsRevenueResponse = GetApiProgramByIdAnalyticsRevenueResponses[keyof GetApiProgramByIdAnalyticsRevenueResponses];

export type PostApiProgramByIdCreateProductData = {
  body?: CreateProductFromProgramDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/create-product';
};

export type PostApiProgramByIdCreateProductResponses = {
  /**
   * OK
   */
  200: string;
};

export type PostApiProgramByIdCreateProductResponse = PostApiProgramByIdCreateProductResponses[keyof PostApiProgramByIdCreateProductResponses];

export type DeleteApiProgramByIdLinkProductByProductIdData = {
  body?: never;
  path: {
    id: string;
    productId: string;
  };
  query?: never;
  url: '/api/program/{id}/link-product/{productId}';
};

export type DeleteApiProgramByIdLinkProductByProductIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiProgramByIdLinkProductByProductIdData = {
  body?: never;
  path: {
    id: string;
    productId: string;
  };
  query?: never;
  url: '/api/program/{id}/link-product/{productId}';
};

export type PostApiProgramByIdLinkProductByProductIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProgramByIdProductsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/program/{id}/products';
};

export type GetApiProgramByIdProductsResponses = {
  /**
   * OK
   */
  200: Array<string>;
};

export type GetApiProgramByIdProductsResponse = GetApiProgramByIdProductsResponses[keyof GetApiProgramByIdProductsResponses];

export type GetApiProgramsByProgramIdContentData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content';
};

export type GetApiProgramsByProgramIdContentResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentResponse = GetApiProgramsByProgramIdContentResponses[keyof GetApiProgramsByProgramIdContentResponses];

export type PostApiProgramsByProgramIdContentData = {
  body?: CreateProgramContentDto;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content';
};

export type PostApiProgramsByProgramIdContentResponses = {
  /**
   * OK
   */
  200: ProgramContentDto;
};

export type PostApiProgramsByProgramIdContentResponse = PostApiProgramsByProgramIdContentResponses[keyof PostApiProgramsByProgramIdContentResponses];

export type GetApiProgramsByProgramIdContentTopLevelData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/top-level';
};

export type GetApiProgramsByProgramIdContentTopLevelResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentTopLevelResponse = GetApiProgramsByProgramIdContentTopLevelResponses[keyof GetApiProgramsByProgramIdContentTopLevelResponses];

export type DeleteApiProgramsByProgramIdContentByIdData = {
  body?: never;
  path: {
    programId: string;
    id: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/{id}';
};

export type DeleteApiProgramsByProgramIdContentByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProgramsByProgramIdContentByIdData = {
  body?: never;
  path: {
    programId: string;
    id: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/{id}';
};

export type GetApiProgramsByProgramIdContentByIdResponses = {
  /**
   * OK
   */
  200: ProgramContentDto;
};

export type GetApiProgramsByProgramIdContentByIdResponse = GetApiProgramsByProgramIdContentByIdResponses[keyof GetApiProgramsByProgramIdContentByIdResponses];

export type PutApiProgramsByProgramIdContentByIdData = {
  body?: UpdateProgramContentDto;
  path: {
    programId: string;
    id: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/{id}';
};

export type PutApiProgramsByProgramIdContentByIdResponses = {
  /**
   * OK
   */
  200: ProgramContentDto;
};

export type PutApiProgramsByProgramIdContentByIdResponse = PutApiProgramsByProgramIdContentByIdResponses[keyof PutApiProgramsByProgramIdContentByIdResponses];

export type GetApiProgramsByProgramIdContentByParentIdChildrenData = {
  body?: never;
  path: {
    programId: string;
    parentId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/{parentId}/children';
};

export type GetApiProgramsByProgramIdContentByParentIdChildrenResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentByParentIdChildrenResponse = GetApiProgramsByProgramIdContentByParentIdChildrenResponses[keyof GetApiProgramsByProgramIdContentByParentIdChildrenResponses];

export type PostApiProgramsByProgramIdContentReorderData = {
  body?: ReorderContentDto;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/reorder';
};

export type PostApiProgramsByProgramIdContentReorderResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiProgramsByProgramIdContentByIdMoveData = {
  body?: MoveContentDto;
  path: {
    programId: string;
    id: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/{id}/move';
};

export type PostApiProgramsByProgramIdContentByIdMoveResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiProgramsByProgramIdContentRequiredData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/required';
};

export type GetApiProgramsByProgramIdContentRequiredResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentRequiredResponse = GetApiProgramsByProgramIdContentRequiredResponses[keyof GetApiProgramsByProgramIdContentRequiredResponses];

export type GetApiProgramsByProgramIdContentByTypeByTypeData = {
  body?: never;
  path: {
    programId: string;
    type: ProgramContentType;
  };
  query?: never;
  url: '/api/programs/{programId}/content/by-type/{type}';
};

export type GetApiProgramsByProgramIdContentByTypeByTypeResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentByTypeByTypeResponse = GetApiProgramsByProgramIdContentByTypeByTypeResponses[keyof GetApiProgramsByProgramIdContentByTypeByTypeResponses];

export type GetApiProgramsByProgramIdContentByVisibilityByVisibilityData = {
  body?: never;
  path: {
    programId: string;
    visibility: Visibility;
  };
  query?: never;
  url: '/api/programs/{programId}/content/by-visibility/{visibility}';
};

export type GetApiProgramsByProgramIdContentByVisibilityByVisibilityResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type GetApiProgramsByProgramIdContentByVisibilityByVisibilityResponse = GetApiProgramsByProgramIdContentByVisibilityByVisibilityResponses[keyof GetApiProgramsByProgramIdContentByVisibilityByVisibilityResponses];

export type PostApiProgramsByProgramIdContentSearchData = {
  body?: SearchContentDto;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/search';
};

export type PostApiProgramsByProgramIdContentSearchResponses = {
  /**
   * OK
   */
  200: Array<ProgramContentDto>;
};

export type PostApiProgramsByProgramIdContentSearchResponse = PostApiProgramsByProgramIdContentSearchResponses[keyof PostApiProgramsByProgramIdContentSearchResponses];

export type GetApiProgramsByProgramIdContentStatsData = {
  body?: never;
  path: {
    programId: string;
  };
  query?: never;
  url: '/api/programs/{programId}/content/stats';
};

export type GetApiProgramsByProgramIdContentStatsResponses = {
  /**
   * OK
   */
  200: ContentStatsDto;
};

export type GetApiProgramsByProgramIdContentStatsResponse = GetApiProgramsByProgramIdContentStatsResponses[keyof GetApiProgramsByProgramIdContentStatsResponses];

export type GetApiProjectsByProjectIdPermissionsMyPermissionsData = {
  body?: never;
  path: {
    projectId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/my-permissions';
};

export type GetApiProjectsByProjectIdPermissionsMyPermissionsResponses = {
  /**
   * OK
   */
  200: Array<EffectivePermission>;
};

export type GetApiProjectsByProjectIdPermissionsMyPermissionsResponse = GetApiProjectsByProjectIdPermissionsMyPermissionsResponses[keyof GetApiProjectsByProjectIdPermissionsMyPermissionsResponses];

export type GetApiProjectsByProjectIdPermissionsCollaboratorsData = {
  body?: never;
  path: {
    projectId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/collaborators';
};

export type GetApiProjectsByProjectIdPermissionsCollaboratorsResponses = {
  /**
   * OK
   */
  200: Array<ProjectCollaboratorDto>;
};

export type GetApiProjectsByProjectIdPermissionsCollaboratorsResponse = GetApiProjectsByProjectIdPermissionsCollaboratorsResponses[keyof GetApiProjectsByProjectIdPermissionsCollaboratorsResponses];

export type PostApiProjectsByProjectIdPermissionsCollaboratorsData = {
  body?: AddCollaboratorRequest;
  path: {
    projectId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/collaborators';
};

export type PostApiProjectsByProjectIdPermissionsCollaboratorsResponses = {
  /**
   * OK
   */
  200: InvitationResult;
};

export type PostApiProjectsByProjectIdPermissionsCollaboratorsResponse = PostApiProjectsByProjectIdPermissionsCollaboratorsResponses[keyof PostApiProjectsByProjectIdPermissionsCollaboratorsResponses];

export type DeleteApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdData = {
  body?: never;
  path: {
    projectId: string;
    collaboratorUserId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/collaborators/{collaboratorUserId}';
};

export type DeleteApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses = {
  /**
   * OK
   */
  200: PermissionUpdateResult;
};

export type DeleteApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponse =
  DeleteApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses[keyof DeleteApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses];

export type PutApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdData = {
  body?: UpdateCollaboratorRequest;
  path: {
    projectId: string;
    collaboratorUserId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/collaborators/{collaboratorUserId}';
};

export type PutApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses = {
  /**
   * OK
   */
  200: PermissionUpdateResult;
};

export type PutApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponse =
  PutApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses[keyof PutApiProjectsByProjectIdPermissionsCollaboratorsByCollaboratorUserIdResponses];

export type GetApiProjectsByProjectIdPermissionsRoleTemplatesData = {
  body?: never;
  path: {
    projectId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/role-templates';
};

export type GetApiProjectsByProjectIdPermissionsRoleTemplatesResponses = {
  /**
   * OK
   */
  200: Array<ProjectRoleTemplate>;
};

export type GetApiProjectsByProjectIdPermissionsRoleTemplatesResponse = GetApiProjectsByProjectIdPermissionsRoleTemplatesResponses[keyof GetApiProjectsByProjectIdPermissionsRoleTemplatesResponses];

export type PostApiProjectsByProjectIdPermissionsShareWithRoleData = {
  body?: ShareProjectWithRoleRequest;
  path: {
    projectId: string;
  };
  query?: never;
  url: '/api/projects/{projectId}/permissions/share-with-role';
};

export type PostApiProjectsByProjectIdPermissionsShareWithRoleResponses = {
  /**
   * OK
   */
  200: ShareResult;
};

export type PostApiProjectsByProjectIdPermissionsShareWithRoleResponse = PostApiProjectsByProjectIdPermissionsShareWithRoleResponses[keyof PostApiProjectsByProjectIdPermissionsShareWithRoleResponses];

export type GetApiProjectsData = {
  body?: never;
  path?: never;
  query?: {
    type?: ProjectType;
    status?: ContentStatus;
    visibility?: AccessLevel;
    creatorId?: string;
    categoryId?: string;
    searchTerm?: string;
    skip?: number;
    take?: number;
    sortBy?: string;
    sortDirection?: string;
  };
  url: '/api/projects';
};

export type GetApiProjectsResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsResponse = GetApiProjectsResponses[keyof GetApiProjectsResponses];

export type PostApiProjectsData = {
  body?: CreateProjectRequest;
  path?: never;
  query?: never;
  url: '/api/projects';
};

export type PostApiProjectsResponses = {
  /**
   * OK
   */
  200: CreateProjectResult;
};

export type PostApiProjectsResponse = PostApiProjectsResponses[keyof PostApiProjectsResponses];

export type DeleteApiProjectsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    softDelete?: boolean;
    reason?: string;
  };
  url: '/api/projects/{id}';
};

export type DeleteApiProjectsByIdResponses = {
  /**
   * OK
   */
  200: DeleteProjectResult;
};

export type DeleteApiProjectsByIdResponse = DeleteApiProjectsByIdResponses[keyof DeleteApiProjectsByIdResponses];

export type GetApiProjectsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    includeTeam?: boolean;
    includeReleases?: boolean;
    includeCollaborators?: boolean;
    includeStatistics?: boolean;
  };
  url: '/api/projects/{id}';
};

export type GetApiProjectsByIdResponses = {
  /**
   * OK
   */
  200: Project;
};

export type GetApiProjectsByIdResponse = GetApiProjectsByIdResponses[keyof GetApiProjectsByIdResponses];

export type PutApiProjectsByIdData = {
  body?: UpdateProjectRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/projects/{id}';
};

export type PutApiProjectsByIdResponses = {
  /**
   * OK
   */
  200: UpdateProjectResult;
};

export type PutApiProjectsByIdResponse = PutApiProjectsByIdResponses[keyof PutApiProjectsByIdResponses];

export type GetApiProjectsSlugBySlugData = {
  body?: never;
  path: {
    slug: string;
  };
  query?: {
    includeTeam?: boolean;
    includeReleases?: boolean;
    includeCollaborators?: boolean;
  };
  url: '/api/projects/slug/{slug}';
};

export type GetApiProjectsSlugBySlugResponses = {
  /**
   * OK
   */
  200: Project;
};

export type GetApiProjectsSlugBySlugResponse = GetApiProjectsSlugBySlugResponses[keyof GetApiProjectsSlugBySlugResponses];

export type PostApiProjectsByIdPublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/projects/{id}/publish';
};

export type PostApiProjectsByIdPublishResponses = {
  /**
   * OK
   */
  200: PublishProjectResult;
};

export type PostApiProjectsByIdPublishResponse = PostApiProjectsByIdPublishResponses[keyof PostApiProjectsByIdPublishResponses];

export type PostApiProjectsByIdUnpublishData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/projects/{id}/unpublish';
};

export type PostApiProjectsByIdUnpublishResponses = {
  /**
   * OK
   */
  200: UnpublishProjectResult;
};

export type PostApiProjectsByIdUnpublishResponse = PostApiProjectsByIdUnpublishResponses[keyof PostApiProjectsByIdUnpublishResponses];

export type PostApiProjectsByIdArchiveData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/projects/{id}/archive';
};

export type PostApiProjectsByIdArchiveResponses = {
  /**
   * OK
   */
  200: ArchiveProjectResult;
};

export type PostApiProjectsByIdArchiveResponse = PostApiProjectsByIdArchiveResponses[keyof PostApiProjectsByIdArchiveResponses];

export type GetApiProjectsSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
    type?: ProjectType;
    categoryId?: string;
    status?: ContentStatus;
    visibility?: AccessLevel;
    skip?: number;
    take?: number;
    sortBy?: string;
    sortDirection?: string;
  };
  url: '/api/projects/search';
};

export type GetApiProjectsSearchResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsSearchResponse = GetApiProjectsSearchResponses[keyof GetApiProjectsSearchResponses];

export type GetApiProjectsPopularData = {
  body?: never;
  path?: never;
  query?: {
    type?: ProjectType;
    take?: number;
  };
  url: '/api/projects/popular';
};

export type GetApiProjectsPopularResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsPopularResponse = GetApiProjectsPopularResponses[keyof GetApiProjectsPopularResponses];

export type GetApiProjectsRecentData = {
  body?: never;
  path?: never;
  query?: {
    type?: ProjectType;
    take?: number;
  };
  url: '/api/projects/recent';
};

export type GetApiProjectsRecentResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsRecentResponse = GetApiProjectsRecentResponses[keyof GetApiProjectsRecentResponses];

export type GetApiProjectsFeaturedData = {
  body?: never;
  path?: never;
  query?: {
    type?: ProjectType;
    take?: number;
  };
  url: '/api/projects/featured';
};

export type GetApiProjectsFeaturedResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsFeaturedResponse = GetApiProjectsFeaturedResponses[keyof GetApiProjectsFeaturedResponses];

export type GetApiProjectsByIdStatisticsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    fromDate?: string;
    toDate?: string;
  };
  url: '/api/projects/{id}/statistics';
};

export type GetApiProjectsByIdStatisticsResponses = {
  /**
   * OK
   */
  200: ProjectStatistics;
};

export type GetApiProjectsByIdStatisticsResponse = GetApiProjectsByIdStatisticsResponses[keyof GetApiProjectsByIdStatisticsResponses];

export type GetApiProjectsCategoryByCategoryIdData = {
  body?: never;
  path: {
    categoryId: string;
  };
  query?: {
    status?: ContentStatus;
    skip?: number;
    take?: number;
  };
  url: '/api/projects/category/{categoryId}';
};

export type GetApiProjectsCategoryByCategoryIdResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsCategoryByCategoryIdResponse = GetApiProjectsCategoryByCategoryIdResponses[keyof GetApiProjectsCategoryByCategoryIdResponses];

export type GetApiProjectsCreatorByCreatorIdData = {
  body?: never;
  path: {
    creatorId: string;
  };
  query?: {
    status?: ContentStatus;
    skip?: number;
    take?: number;
  };
  url: '/api/projects/creator/{creatorId}';
};

export type GetApiProjectsCreatorByCreatorIdResponses = {
  /**
   * OK
   */
  200: Array<Project>;
};

export type GetApiProjectsCreatorByCreatorIdResponse = GetApiProjectsCreatorByCreatorIdResponses[keyof GetApiProjectsCreatorByCreatorIdResponses];

export type GetApiResourcesByResourceTypeByResourceIdPermissionsMyPermissionsData = {
  body?: never;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/my-permissions';
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsMyPermissionsResponses = {
  /**
   * OK
   */
  200: Array<EffectivePermission>;
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsMyPermissionsResponse =
  GetApiResourcesByResourceTypeByResourceIdPermissionsMyPermissionsResponses[keyof GetApiResourcesByResourceTypeByResourceIdPermissionsMyPermissionsResponses];

export type GetApiResourcesByResourceTypeByResourceIdPermissionsUsersData = {
  body?: never;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/users';
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsUsersResponses = {
  /**
   * OK
   */
  200: Array<ResourceUserPermission>;
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsUsersResponse = GetApiResourcesByResourceTypeByResourceIdPermissionsUsersResponses[keyof GetApiResourcesByResourceTypeByResourceIdPermissionsUsersResponses];

export type PostApiResourcesByResourceTypeByResourceIdPermissionsShareData = {
  body?: ShareResourceRequest;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/share';
};

export type PostApiResourcesByResourceTypeByResourceIdPermissionsShareResponses = {
  /**
   * OK
   */
  200: ShareResult;
};

export type PostApiResourcesByResourceTypeByResourceIdPermissionsShareResponse = PostApiResourcesByResourceTypeByResourceIdPermissionsShareResponses[keyof PostApiResourcesByResourceTypeByResourceIdPermissionsShareResponses];

export type DeleteApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdData = {
  body?: never;
  path: {
    resourceType: string;
    resourceId: string;
    targetUserId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/users/{targetUserId}';
};

export type DeleteApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses = {
  /**
   * OK
   */
  200: PermissionUpdateResult;
};

export type DeleteApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponse =
  DeleteApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses[keyof DeleteApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses];

export type PutApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdData = {
  body?: UpdatePermissionsRequest;
  path: {
    resourceType: string;
    resourceId: string;
    targetUserId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/users/{targetUserId}';
};

export type PutApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses = {
  /**
   * OK
   */
  200: PermissionUpdateResult;
};

export type PutApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponse =
  PutApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses[keyof PutApiResourcesByResourceTypeByResourceIdPermissionsUsersByTargetUserIdResponses];

export type PostApiResourcesByResourceTypeByResourceIdPermissionsInviteData = {
  body?: InviteUserRequest;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/invite';
};

export type PostApiResourcesByResourceTypeByResourceIdPermissionsInviteResponses = {
  /**
   * OK
   */
  200: InvitationResult;
};

export type PostApiResourcesByResourceTypeByResourceIdPermissionsInviteResponse = PostApiResourcesByResourceTypeByResourceIdPermissionsInviteResponses[keyof PostApiResourcesByResourceTypeByResourceIdPermissionsInviteResponses];

export type GetApiResourcesByResourceTypeByResourceIdPermissionsInvitationsData = {
  body?: never;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: never;
  url: '/api/resources/{resourceType}/{resourceId}/permissions/invitations';
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsInvitationsResponses = {
  /**
   * OK
   */
  200: Array<ResourceInvitation>;
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsInvitationsResponse = GetApiResourcesByResourceTypeByResourceIdPermissionsInvitationsResponses[keyof GetApiResourcesByResourceTypeByResourceIdPermissionsInvitationsResponses];

export type GetApiResourcesByResourceTypeByResourceIdPermissionsHierarchyData = {
  body?: never;
  path: {
    resourceType: string;
    resourceId: string;
  };
  query?: {
    permission?: PermissionType;
  };
  url: '/api/resources/{resourceType}/{resourceId}/permissions/hierarchy';
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsHierarchyResponses = {
  /**
   * OK
   */
  200: PermissionHierarchy;
};

export type GetApiResourcesByResourceTypeByResourceIdPermissionsHierarchyResponse = GetApiResourcesByResourceTypeByResourceIdPermissionsHierarchyResponses[keyof GetApiResourcesByResourceTypeByResourceIdPermissionsHierarchyResponses];

export type GetApiSubscriptionMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/subscription/me';
};

export type GetApiSubscriptionMeResponses = {
  /**
   * OK
   */
  200: Array<UserSubscription>;
};

export type GetApiSubscriptionMeResponse = GetApiSubscriptionMeResponses[keyof GetApiSubscriptionMeResponses];

export type GetApiSubscriptionMeActiveData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/subscription/me/active';
};

export type GetApiSubscriptionMeActiveResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type GetApiSubscriptionMeActiveResponse = GetApiSubscriptionMeActiveResponses[keyof GetApiSubscriptionMeActiveResponses];

export type GetApiSubscriptionByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/subscription/{id}';
};

export type GetApiSubscriptionByIdResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type GetApiSubscriptionByIdResponse = GetApiSubscriptionByIdResponses[keyof GetApiSubscriptionByIdResponses];

export type GetApiSubscriptionData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
    status?: SubscriptionStatus;
  };
  url: '/api/subscription';
};

export type GetApiSubscriptionResponses = {
  /**
   * OK
   */
  200: Array<UserSubscription>;
};

export type GetApiSubscriptionResponse = GetApiSubscriptionResponses[keyof GetApiSubscriptionResponses];

export type PostApiSubscriptionData = {
  body?: CreateSubscriptionDto;
  path?: never;
  query?: never;
  url: '/api/subscription';
};

export type PostApiSubscriptionResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type PostApiSubscriptionResponse = PostApiSubscriptionResponses[keyof PostApiSubscriptionResponses];

export type PostApiSubscriptionByIdCancelData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/subscription/{id}/cancel';
};

export type PostApiSubscriptionByIdCancelResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type PostApiSubscriptionByIdCancelResponse = PostApiSubscriptionByIdCancelResponses[keyof PostApiSubscriptionByIdCancelResponses];

export type PostApiSubscriptionByIdResumeData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/subscription/{id}/resume';
};

export type PostApiSubscriptionByIdResumeResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type PostApiSubscriptionByIdResumeResponse = PostApiSubscriptionByIdResumeResponses[keyof PostApiSubscriptionByIdResumeResponses];

export type PutApiSubscriptionByIdPaymentMethodData = {
  body?: UpdatePaymentMethodDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/subscription/{id}/payment-method';
};

export type PutApiSubscriptionByIdPaymentMethodResponses = {
  /**
   * OK
   */
  200: UserSubscription;
};

export type PutApiSubscriptionByIdPaymentMethodResponse = PutApiSubscriptionByIdPaymentMethodResponses[keyof PutApiSubscriptionByIdPaymentMethodResponses];

export type GetApiTenantDomainsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/api/tenant-domains';
};

export type GetApiTenantDomainsResponses = {
  /**
   * OK
   */
  200: Array<TenantDomain>;
};

export type GetApiTenantDomainsResponse = GetApiTenantDomainsResponses[keyof GetApiTenantDomainsResponses];

export type PostApiTenantDomainsData = {
  body?: CreateTenantDomainDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains';
};

export type PostApiTenantDomainsResponses = {
  /**
   * OK
   */
  200: TenantDomain;
};

export type PostApiTenantDomainsResponse = PostApiTenantDomainsResponses[keyof PostApiTenantDomainsResponses];

export type DeleteApiTenantDomainsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/{id}';
};

export type DeleteApiTenantDomainsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiTenantDomainsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/{id}';
};

export type GetApiTenantDomainsByIdResponses = {
  /**
   * OK
   */
  200: TenantDomain;
};

export type GetApiTenantDomainsByIdResponse = GetApiTenantDomainsByIdResponses[keyof GetApiTenantDomainsByIdResponses];

export type PutApiTenantDomainsByIdData = {
  body?: UpdateTenantDomainDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/{id}';
};

export type PutApiTenantDomainsByIdResponses = {
  /**
   * OK
   */
  200: TenantDomain;
};

export type PutApiTenantDomainsByIdResponse = PutApiTenantDomainsByIdResponses[keyof PutApiTenantDomainsByIdResponses];

export type PostApiTenantDomainsByTenantIdSetMainByDomainIdData = {
  body?: never;
  path: {
    tenantId: string;
    domainId: string;
  };
  query?: never;
  url: '/api/tenant-domains/{tenantId}/set-main/{domainId}';
};

export type PostApiTenantDomainsByTenantIdSetMainByDomainIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiTenantDomainsUserGroupsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
    rootOnly?: boolean;
  };
  url: '/api/tenant-domains/user-groups';
};

export type GetApiTenantDomainsUserGroupsResponses = {
  /**
   * OK
   */
  200: Array<TenantUserGroupDto>;
};

export type GetApiTenantDomainsUserGroupsResponse = GetApiTenantDomainsUserGroupsResponses[keyof GetApiTenantDomainsUserGroupsResponses];

export type PostApiTenantDomainsUserGroupsData = {
  body?: CreateTenantUserGroupDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains/user-groups';
};

export type PostApiTenantDomainsUserGroupsResponses = {
  /**
   * OK
   */
  200: TenantUserGroupDto;
};

export type PostApiTenantDomainsUserGroupsResponse = PostApiTenantDomainsUserGroupsResponses[keyof PostApiTenantDomainsUserGroupsResponses];

export type DeleteApiTenantDomainsUserGroupsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/user-groups/{id}';
};

export type DeleteApiTenantDomainsUserGroupsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiTenantDomainsUserGroupsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/user-groups/{id}';
};

export type GetApiTenantDomainsUserGroupsByIdResponses = {
  /**
   * OK
   */
  200: TenantUserGroupDto;
};

export type GetApiTenantDomainsUserGroupsByIdResponse = GetApiTenantDomainsUserGroupsByIdResponses[keyof GetApiTenantDomainsUserGroupsByIdResponses];

export type PutApiTenantDomainsUserGroupsByIdData = {
  body?: UpdateTenantUserGroupDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenant-domains/user-groups/{id}';
};

export type PutApiTenantDomainsUserGroupsByIdResponses = {
  /**
   * OK
   */
  200: TenantUserGroupDto;
};

export type PutApiTenantDomainsUserGroupsByIdResponse = PutApiTenantDomainsUserGroupsByIdResponses[keyof PutApiTenantDomainsUserGroupsByIdResponses];

export type GetApiTenantDomainsMembershipsUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/api/tenant-domains/memberships/user/{userId}';
};

export type GetApiTenantDomainsMembershipsUserByUserIdResponses = {
  /**
   * OK
   */
  200: Array<TenantUserGroupMembershipDto>;
};

export type GetApiTenantDomainsMembershipsUserByUserIdResponse = GetApiTenantDomainsMembershipsUserByUserIdResponses[keyof GetApiTenantDomainsMembershipsUserByUserIdResponses];

export type DeleteApiTenantDomainsUserGroupsMembershipsData = {
  body?: never;
  path?: never;
  query?: {
    userId?: string;
    userGroupId?: string;
  };
  url: '/api/tenant-domains/user-groups/memberships';
};

export type DeleteApiTenantDomainsUserGroupsMembershipsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiTenantDomainsUserGroupsMembershipsData = {
  body?: AddUserToGroupDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains/user-groups/memberships';
};

export type PostApiTenantDomainsUserGroupsMembershipsResponses = {
  /**
   * OK
   */
  200: TenantUserGroupMembership;
};

export type PostApiTenantDomainsUserGroupsMembershipsResponse = PostApiTenantDomainsUserGroupsMembershipsResponses[keyof PostApiTenantDomainsUserGroupsMembershipsResponses];

export type GetApiTenantDomainsUserGroupsByGroupIdMembersData = {
  body?: never;
  path: {
    groupId: string;
  };
  query?: never;
  url: '/api/tenant-domains/user-groups/{groupId}/members';
};

export type GetApiTenantDomainsUserGroupsByGroupIdMembersResponses = {
  /**
   * OK
   */
  200: Array<TenantUserGroupMembership>;
};

export type GetApiTenantDomainsUserGroupsByGroupIdMembersResponse = GetApiTenantDomainsUserGroupsByGroupIdMembersResponses[keyof GetApiTenantDomainsUserGroupsByGroupIdMembersResponses];

export type GetApiTenantDomainsUsersByUserIdGroupsData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/api/tenant-domains/users/{userId}/groups';
};

export type GetApiTenantDomainsUsersByUserIdGroupsResponses = {
  /**
   * OK
   */
  200: Array<TenantUserGroupDto>;
};

export type GetApiTenantDomainsUsersByUserIdGroupsResponse = GetApiTenantDomainsUsersByUserIdGroupsResponses[keyof GetApiTenantDomainsUsersByUserIdGroupsResponses];

export type GetApiTenantDomainsGroupsByGroupIdUsersData = {
  body?: never;
  path: {
    groupId: string;
  };
  query?: never;
  url: '/api/tenant-domains/groups/{groupId}/users';
};

export type GetApiTenantDomainsGroupsByGroupIdUsersResponses = {
  /**
   * OK
   */
  200: Array<UserDto>;
};

export type GetApiTenantDomainsGroupsByGroupIdUsersResponse = GetApiTenantDomainsGroupsByGroupIdUsersResponses[keyof GetApiTenantDomainsGroupsByGroupIdUsersResponses];

export type PostApiTenantDomainsAutoAssignData = {
  body?: AutoAssignUserDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains/auto-assign';
};

export type PostApiTenantDomainsAutoAssignResponses = {
  /**
   * OK
   */
  200: TenantUserGroupMembershipDto;
};

export type PostApiTenantDomainsAutoAssignResponse = PostApiTenantDomainsAutoAssignResponses[keyof PostApiTenantDomainsAutoAssignResponses];

export type PostApiTenantDomainsAutoAssignBulkData = {
  body?: AutoAssignUsersDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains/auto-assign-bulk';
};

export type PostApiTenantDomainsAutoAssignBulkResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiTenantDomainsDomainMatchData = {
  body?: never;
  path?: never;
  query?: {
    email?: string;
  };
  url: '/api/tenant-domains/domain-match';
};

export type GetApiTenantDomainsDomainMatchResponses = {
  /**
   * OK
   */
  200: TenantDomain;
};

export type GetApiTenantDomainsDomainMatchResponse = GetApiTenantDomainsDomainMatchResponses[keyof GetApiTenantDomainsDomainMatchResponses];

export type PostApiTenantDomainsMembershipsData = {
  body?: AddUserToGroupDto;
  path?: never;
  query?: never;
  url: '/api/tenant-domains/memberships';
};

export type PostApiTenantDomainsMembershipsResponses = {
  /**
   * OK
   */
  200: TenantUserGroupMembershipDto;
};

export type PostApiTenantDomainsMembershipsResponse = PostApiTenantDomainsMembershipsResponses[keyof PostApiTenantDomainsMembershipsResponses];

export type GetApiTenantsData = {
  body?: never;
  path?: never;
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/tenants';
};

export type GetApiTenantsResponses = {
  /**
   * OK
   */
  200: Array<Tenant>;
};

export type GetApiTenantsResponse = GetApiTenantsResponses[keyof GetApiTenantsResponses];

export type PostApiTenantsData = {
  body?: CreateTenantDto;
  path?: never;
  query?: never;
  url: '/api/tenants';
};

export type PostApiTenantsResponses = {
  /**
   * OK
   */
  200: Tenant;
};

export type PostApiTenantsResponse = PostApiTenantsResponses[keyof PostApiTenantsResponses];

export type DeleteApiTenantsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}';
};

export type DeleteApiTenantsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiTenantsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/tenants/{id}';
};

export type GetApiTenantsByIdResponses = {
  /**
   * OK
   */
  200: Tenant;
};

export type GetApiTenantsByIdResponse = GetApiTenantsByIdResponses[keyof GetApiTenantsByIdResponses];

export type PutApiTenantsByIdData = {
  body?: UpdateTenantDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}';
};

export type PutApiTenantsByIdResponses = {
  /**
   * OK
   */
  200: Tenant;
};

export type PutApiTenantsByIdResponse = PutApiTenantsByIdResponses[keyof PutApiTenantsByIdResponses];

export type GetApiTenantsByNameByNameData = {
  body?: never;
  path: {
    name: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/tenants/by-name/{name}';
};

export type GetApiTenantsByNameByNameResponses = {
  /**
   * OK
   */
  200: Tenant;
};

export type GetApiTenantsByNameByNameResponse = GetApiTenantsByNameByNameResponses[keyof GetApiTenantsByNameByNameResponses];

export type GetApiTenantsBySlugBySlugData = {
  body?: never;
  path: {
    slug: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/tenants/by-slug/{slug}';
};

export type GetApiTenantsBySlugBySlugResponses = {
  /**
   * OK
   */
  200: Tenant;
};

export type GetApiTenantsBySlugBySlugResponse = GetApiTenantsBySlugBySlugResponses[keyof GetApiTenantsBySlugBySlugResponses];

export type GetApiTenantsDeletedData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/tenants/deleted';
};

export type GetApiTenantsDeletedResponses = {
  /**
   * OK
   */
  200: Array<Tenant>;
};

export type GetApiTenantsDeletedResponse = GetApiTenantsDeletedResponses[keyof GetApiTenantsDeletedResponses];

export type GetApiTenantsActiveData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/tenants/active';
};

export type GetApiTenantsActiveResponses = {
  /**
   * OK
   */
  200: Array<Tenant>;
};

export type GetApiTenantsActiveResponse = GetApiTenantsActiveResponses[keyof GetApiTenantsActiveResponses];

export type GetApiTenantsSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
    isActive?: boolean;
    includeDeleted?: boolean;
    sortBy?: TenantSortField;
    sortDescending?: boolean;
    limit?: number;
    offset?: number;
  };
  url: '/api/tenants/search';
};

export type GetApiTenantsSearchResponses = {
  /**
   * OK
   */
  200: Array<Tenant>;
};

export type GetApiTenantsSearchResponse = GetApiTenantsSearchResponses[keyof GetApiTenantsSearchResponses];

export type GetApiTenantsStatisticsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/tenants/statistics';
};

export type GetApiTenantsStatisticsResponses = {
  /**
   * OK
   */
  200: TenantStatistics;
};

export type GetApiTenantsStatisticsResponse = GetApiTenantsStatisticsResponses[keyof GetApiTenantsStatisticsResponses];

export type PostApiTenantsByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}/restore';
};

export type PostApiTenantsByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type DeleteApiTenantsByIdPermanentData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}/permanent';
};

export type DeleteApiTenantsByIdPermanentResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiTenantsByIdActivateData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}/activate';
};

export type PostApiTenantsByIdActivateResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiTenantsByIdDeactivateData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/tenants/{id}/deactivate';
};

export type PostApiTenantsByIdDeactivateResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostApiTenantsBulkDeleteData = {
  body?: BulkDeleteTenantsDto;
  path?: never;
  query?: never;
  url: '/api/tenants/bulk-delete';
};

export type PostApiTenantsBulkDeleteResponses = {
  /**
   * OK
   */
  200: number;
};

export type PostApiTenantsBulkDeleteResponse = PostApiTenantsBulkDeleteResponses[keyof PostApiTenantsBulkDeleteResponses];

export type PostApiTenantsBulkRestoreData = {
  body?: BulkRestoreTenantsDto;
  path?: never;
  query?: never;
  url: '/api/tenants/bulk-restore';
};

export type PostApiTenantsBulkRestoreResponses = {
  /**
   * OK
   */
  200: number;
};

export type PostApiTenantsBulkRestoreResponse = PostApiTenantsBulkRestoreResponses[keyof PostApiTenantsBulkRestoreResponses];

export type GetTestingRequestsData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/testing/requests';
};

export type GetTestingRequestsResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingRequestsResponse = GetTestingRequestsResponses[keyof GetTestingRequestsResponses];

export type PostTestingRequestsData = {
  body?: CreateTestingRequestDto;
  path?: never;
  query?: never;
  url: '/testing/requests';
};

export type PostTestingRequestsResponses = {
  /**
   * OK
   */
  200: TestingRequest;
};

export type PostTestingRequestsResponse = PostTestingRequestsResponses[keyof PostTestingRequestsResponses];

export type DeleteTestingRequestsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/requests/{id}';
};

export type DeleteTestingRequestsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingRequestsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/requests/{id}';
};

export type GetTestingRequestsByIdResponses = {
  /**
   * OK
   */
  200: TestingRequest;
};

export type GetTestingRequestsByIdResponse = GetTestingRequestsByIdResponses[keyof GetTestingRequestsByIdResponses];

export type PutTestingRequestsByIdData = {
  body?: TestingRequest;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/requests/{id}';
};

export type PutTestingRequestsByIdResponses = {
  /**
   * OK
   */
  200: TestingRequest;
};

export type PutTestingRequestsByIdResponse = PutTestingRequestsByIdResponses[keyof PutTestingRequestsByIdResponses];

export type GetTestingRequestsByIdDetailsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/requests/{id}/details';
};

export type GetTestingRequestsByIdDetailsResponses = {
  /**
   * OK
   */
  200: TestingRequest;
};

export type GetTestingRequestsByIdDetailsResponse = GetTestingRequestsByIdDetailsResponses[keyof GetTestingRequestsByIdDetailsResponses];

export type PostTestingRequestsByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/requests/{id}/restore';
};

export type PostTestingRequestsByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingSessionsData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/testing/sessions';
};

export type GetTestingSessionsResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsResponse = GetTestingSessionsResponses[keyof GetTestingSessionsResponses];

export type PostTestingSessionsData = {
  body?: TestingSession;
  path?: never;
  query?: never;
  url: '/testing/sessions';
};

export type PostTestingSessionsResponses = {
  /**
   * OK
   */
  200: TestingSession;
};

export type PostTestingSessionsResponse = PostTestingSessionsResponses[keyof PostTestingSessionsResponses];

export type DeleteTestingSessionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/sessions/{id}';
};

export type DeleteTestingSessionsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingSessionsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/sessions/{id}';
};

export type GetTestingSessionsByIdResponses = {
  /**
   * OK
   */
  200: TestingSession;
};

export type GetTestingSessionsByIdResponse = GetTestingSessionsByIdResponses[keyof GetTestingSessionsByIdResponses];

export type PutTestingSessionsByIdData = {
  body?: TestingSession;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/sessions/{id}';
};

export type PutTestingSessionsByIdResponses = {
  /**
   * OK
   */
  200: TestingSession;
};

export type PutTestingSessionsByIdResponse = PutTestingSessionsByIdResponses[keyof PutTestingSessionsByIdResponses];

export type GetTestingSessionsByIdDetailsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/sessions/{id}/details';
};

export type GetTestingSessionsByIdDetailsResponses = {
  /**
   * OK
   */
  200: TestingSession;
};

export type GetTestingSessionsByIdDetailsResponse = GetTestingSessionsByIdDetailsResponses[keyof GetTestingSessionsByIdDetailsResponses];

export type PostTestingSessionsByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/sessions/{id}/restore';
};

export type PostTestingSessionsByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingRequestsByProjectVersionByProjectVersionIdData = {
  body?: never;
  path: {
    projectVersionId: string;
  };
  query?: never;
  url: '/testing/requests/by-project-version/{projectVersionId}';
};

export type GetTestingRequestsByProjectVersionByProjectVersionIdResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingRequestsByProjectVersionByProjectVersionIdResponse = GetTestingRequestsByProjectVersionByProjectVersionIdResponses[keyof GetTestingRequestsByProjectVersionByProjectVersionIdResponses];

export type GetTestingRequestsByCreatorByCreatorIdData = {
  body?: never;
  path: {
    creatorId: string;
  };
  query?: never;
  url: '/testing/requests/by-creator/{creatorId}';
};

export type GetTestingRequestsByCreatorByCreatorIdResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingRequestsByCreatorByCreatorIdResponse = GetTestingRequestsByCreatorByCreatorIdResponses[keyof GetTestingRequestsByCreatorByCreatorIdResponses];

export type GetTestingRequestsByStatusByStatusData = {
  body?: never;
  path: {
    status: TestingRequestStatus;
  };
  query?: never;
  url: '/testing/requests/by-status/{status}';
};

export type GetTestingRequestsByStatusByStatusResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingRequestsByStatusByStatusResponse = GetTestingRequestsByStatusByStatusResponses[keyof GetTestingRequestsByStatusByStatusResponses];

export type GetTestingSessionsByRequestByTestingRequestIdData = {
  body?: never;
  path: {
    testingRequestId: string;
  };
  query?: never;
  url: '/testing/sessions/by-request/{testingRequestId}';
};

export type GetTestingSessionsByRequestByTestingRequestIdResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsByRequestByTestingRequestIdResponse = GetTestingSessionsByRequestByTestingRequestIdResponses[keyof GetTestingSessionsByRequestByTestingRequestIdResponses];

export type GetTestingSessionsByLocationByLocationIdData = {
  body?: never;
  path: {
    locationId: string;
  };
  query?: never;
  url: '/testing/sessions/by-location/{locationId}';
};

export type GetTestingSessionsByLocationByLocationIdResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsByLocationByLocationIdResponse = GetTestingSessionsByLocationByLocationIdResponses[keyof GetTestingSessionsByLocationByLocationIdResponses];

export type GetTestingSessionsByStatusByStatusData = {
  body?: never;
  path: {
    status: SessionStatus;
  };
  query?: never;
  url: '/testing/sessions/by-status/{status}';
};

export type GetTestingSessionsByStatusByStatusResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsByStatusByStatusResponse = GetTestingSessionsByStatusByStatusResponses[keyof GetTestingSessionsByStatusByStatusResponses];

export type GetTestingSessionsByManagerByManagerIdData = {
  body?: never;
  path: {
    managerId: string;
  };
  query?: never;
  url: '/testing/sessions/by-manager/{managerId}';
};

export type GetTestingSessionsByManagerByManagerIdResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsByManagerByManagerIdResponse = GetTestingSessionsByManagerByManagerIdResponses[keyof GetTestingSessionsByManagerByManagerIdResponses];

export type GetTestingRequestsSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
  };
  url: '/testing/requests/search';
};

export type GetTestingRequestsSearchResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingRequestsSearchResponse = GetTestingRequestsSearchResponses[keyof GetTestingRequestsSearchResponses];

export type GetTestingSessionsSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
  };
  url: '/testing/sessions/search';
};

export type GetTestingSessionsSearchResponses = {
  /**
   * OK
   */
  200: Array<TestingSession>;
};

export type GetTestingSessionsSearchResponse = GetTestingSessionsSearchResponses[keyof GetTestingSessionsSearchResponses];

export type DeleteTestingRequestsByRequestIdParticipantsByUserIdData = {
  body?: never;
  path: {
    requestId: string;
    userId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/participants/{userId}';
};

export type DeleteTestingRequestsByRequestIdParticipantsByUserIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingRequestsByRequestIdParticipantsByUserIdData = {
  body?: never;
  path: {
    requestId: string;
    userId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/participants/{userId}';
};

export type PostTestingRequestsByRequestIdParticipantsByUserIdResponses = {
  /**
   * OK
   */
  200: TestingParticipant;
};

export type PostTestingRequestsByRequestIdParticipantsByUserIdResponse = PostTestingRequestsByRequestIdParticipantsByUserIdResponses[keyof PostTestingRequestsByRequestIdParticipantsByUserIdResponses];

export type GetTestingRequestsByRequestIdParticipantsData = {
  body?: never;
  path: {
    requestId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/participants';
};

export type GetTestingRequestsByRequestIdParticipantsResponses = {
  /**
   * OK
   */
  200: Array<TestingParticipant>;
};

export type GetTestingRequestsByRequestIdParticipantsResponse = GetTestingRequestsByRequestIdParticipantsResponses[keyof GetTestingRequestsByRequestIdParticipantsResponses];

export type GetTestingRequestsByRequestIdParticipantsByUserIdCheckData = {
  body?: never;
  path: {
    requestId: string;
    userId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/participants/{userId}/check';
};

export type GetTestingRequestsByRequestIdParticipantsByUserIdCheckResponses = {
  /**
   * OK
   */
  200: boolean;
};

export type GetTestingRequestsByRequestIdParticipantsByUserIdCheckResponse = GetTestingRequestsByRequestIdParticipantsByUserIdCheckResponses[keyof GetTestingRequestsByRequestIdParticipantsByUserIdCheckResponses];

export type DeleteTestingSessionsBySessionIdRegisterData = {
  body?: never;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/register';
};

export type DeleteTestingSessionsBySessionIdRegisterResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingSessionsBySessionIdRegisterData = {
  body?: SessionRegistrationRequest;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/register';
};

export type PostTestingSessionsBySessionIdRegisterResponses = {
  /**
   * OK
   */
  200: SessionRegistration;
};

export type PostTestingSessionsBySessionIdRegisterResponse = PostTestingSessionsBySessionIdRegisterResponses[keyof PostTestingSessionsBySessionIdRegisterResponses];

export type GetTestingSessionsBySessionIdRegistrationsData = {
  body?: never;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/registrations';
};

export type GetTestingSessionsBySessionIdRegistrationsResponses = {
  /**
   * OK
   */
  200: Array<SessionRegistration>;
};

export type GetTestingSessionsBySessionIdRegistrationsResponse = GetTestingSessionsBySessionIdRegistrationsResponses[keyof GetTestingSessionsBySessionIdRegistrationsResponses];

export type DeleteTestingSessionsBySessionIdWaitlistData = {
  body?: never;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/waitlist';
};

export type DeleteTestingSessionsBySessionIdWaitlistResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingSessionsBySessionIdWaitlistData = {
  body?: never;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/waitlist';
};

export type GetTestingSessionsBySessionIdWaitlistResponses = {
  /**
   * OK
   */
  200: Array<SessionWaitlist>;
};

export type GetTestingSessionsBySessionIdWaitlistResponse = GetTestingSessionsBySessionIdWaitlistResponses[keyof GetTestingSessionsBySessionIdWaitlistResponses];

export type PostTestingSessionsBySessionIdWaitlistData = {
  body?: SessionRegistrationRequest;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/waitlist';
};

export type PostTestingSessionsBySessionIdWaitlistResponses = {
  /**
   * OK
   */
  200: SessionWaitlist;
};

export type PostTestingSessionsBySessionIdWaitlistResponse = PostTestingSessionsBySessionIdWaitlistResponses[keyof PostTestingSessionsBySessionIdWaitlistResponses];

export type GetTestingRequestsByRequestIdFeedbackData = {
  body?: never;
  path: {
    requestId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/feedback';
};

export type GetTestingRequestsByRequestIdFeedbackResponses = {
  /**
   * OK
   */
  200: Array<TestingFeedback>;
};

export type GetTestingRequestsByRequestIdFeedbackResponse = GetTestingRequestsByRequestIdFeedbackResponses[keyof GetTestingRequestsByRequestIdFeedbackResponses];

export type PostTestingRequestsByRequestIdFeedbackData = {
  body?: FeedbackRequest;
  path: {
    requestId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/feedback';
};

export type PostTestingRequestsByRequestIdFeedbackResponses = {
  /**
   * OK
   */
  200: TestingFeedback;
};

export type PostTestingRequestsByRequestIdFeedbackResponse = PostTestingRequestsByRequestIdFeedbackResponses[keyof PostTestingRequestsByRequestIdFeedbackResponses];

export type GetTestingFeedbackByUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/testing/feedback/by-user/{userId}';
};

export type GetTestingFeedbackByUserByUserIdResponses = {
  /**
   * OK
   */
  200: Array<TestingFeedback>;
};

export type GetTestingFeedbackByUserByUserIdResponse = GetTestingFeedbackByUserByUserIdResponses[keyof GetTestingFeedbackByUserByUserIdResponses];

export type GetTestingRequestsByRequestIdStatisticsData = {
  body?: never;
  path: {
    requestId: string;
  };
  query?: never;
  url: '/testing/requests/{requestId}/statistics';
};

export type GetTestingRequestsByRequestIdStatisticsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingSessionsBySessionIdStatisticsData = {
  body?: never;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/statistics';
};

export type GetTestingSessionsBySessionIdStatisticsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingUsersByUserIdActivityData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/testing/users/{userId}/activity';
};

export type GetTestingUsersByUserIdActivityResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingSubmitSimpleData = {
  body?: CreateSimpleTestingRequestDto;
  path?: never;
  query?: never;
  url: '/testing/submit-simple';
};

export type PostTestingSubmitSimpleResponses = {
  /**
   * OK
   */
  200: TestingRequest;
};

export type PostTestingSubmitSimpleResponse = PostTestingSubmitSimpleResponses[keyof PostTestingSubmitSimpleResponses];

export type PostTestingFeedbackData = {
  body?: SubmitFeedbackDto;
  path?: never;
  query?: never;
  url: '/testing/feedback';
};

export type PostTestingFeedbackResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingMyRequestsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/testing/my-requests';
};

export type GetTestingMyRequestsResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingMyRequestsResponse = GetTestingMyRequestsResponses[keyof GetTestingMyRequestsResponses];

export type GetTestingAvailableForTestingData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/testing/available-for-testing';
};

export type GetTestingAvailableForTestingResponses = {
  /**
   * OK
   */
  200: Array<TestingRequest>;
};

export type GetTestingAvailableForTestingResponse = GetTestingAvailableForTestingResponses[keyof GetTestingAvailableForTestingResponses];

export type GetTestingAttendanceStudentsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/testing/attendance/students';
};

export type GetTestingAttendanceStudentsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingAttendanceSessionsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/testing/attendance/sessions';
};

export type GetTestingAttendanceSessionsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingSessionsBySessionIdAttendanceData = {
  body?: UpdateAttendanceDto;
  path: {
    sessionId: string;
  };
  query?: never;
  url: '/testing/sessions/{sessionId}/attendance';
};

export type PostTestingSessionsBySessionIdAttendanceResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingFeedbackByFeedbackIdReportData = {
  body?: ReportFeedbackDto;
  path: {
    feedbackId: string;
  };
  query?: never;
  url: '/testing/feedback/{feedbackId}/report';
};

export type PostTestingFeedbackByFeedbackIdReportResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingFeedbackByFeedbackIdQualityData = {
  body?: RateFeedbackQualityDto;
  path: {
    feedbackId: string;
  };
  query?: never;
  url: '/testing/feedback/{feedbackId}/quality';
};

export type PostTestingFeedbackByFeedbackIdQualityResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingLocationsData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    take?: number;
  };
  url: '/testing/locations';
};

export type GetTestingLocationsResponses = {
  /**
   * OK
   */
  200: Array<TestingLocation>;
};

export type GetTestingLocationsResponse = GetTestingLocationsResponses[keyof GetTestingLocationsResponses];

export type PostTestingLocationsData = {
  body?: CreateTestingLocationDto;
  path?: never;
  query?: never;
  url: '/testing/locations';
};

export type PostTestingLocationsResponses = {
  /**
   * OK
   */
  200: TestingLocation;
};

export type PostTestingLocationsResponse = PostTestingLocationsResponses[keyof PostTestingLocationsResponses];

export type DeleteTestingLocationsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/locations/{id}';
};

export type DeleteTestingLocationsByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingLocationsByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/locations/{id}';
};

export type GetTestingLocationsByIdResponses = {
  /**
   * OK
   */
  200: TestingLocation;
};

export type GetTestingLocationsByIdResponse = GetTestingLocationsByIdResponses[keyof GetTestingLocationsByIdResponses];

export type PutTestingLocationsByIdData = {
  body?: UpdateTestingLocationDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/locations/{id}';
};

export type PutTestingLocationsByIdResponses = {
  /**
   * OK
   */
  200: TestingLocation;
};

export type PutTestingLocationsByIdResponse = PutTestingLocationsByIdResponses[keyof PutTestingLocationsByIdResponses];

export type PostTestingLocationsByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/testing/locations/{id}/restore';
};

export type PostTestingLocationsByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingPermissionsCheckData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/testing/permissions/check';
};

export type GetTestingPermissionsCheckResponses = {
  /**
   * OK
   */
  200: TestingLabActionPermissions;
};

export type GetTestingPermissionsCheckResponse = GetTestingPermissionsCheckResponses[keyof GetTestingPermissionsCheckResponses];

export type GetTestingPermissionsMyPermissionsData = {
  body?: never;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/testing/permissions/my-permissions';
};

export type GetTestingPermissionsMyPermissionsResponses = {
  /**
   * OK
   */
  200: TestingLabPermissions;
};

export type GetTestingPermissionsMyPermissionsResponse = GetTestingPermissionsMyPermissionsResponses[keyof GetTestingPermissionsMyPermissionsResponses];

export type PostTestingPermissionsAssignRoleData = {
  body?: AssignTestingLabRoleRequest;
  path?: never;
  query?: never;
  url: '/testing/permissions/assign-role';
};

export type PostTestingPermissionsAssignRoleResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PostTestingSessionsCreateWithPermissionsData = {
  body?: CreateTestingSessionDto;
  path?: never;
  query?: {
    tenantId?: string;
  };
  url: '/testing/sessions/create-with-permissions';
};

export type PostTestingSessionsCreateWithPermissionsResponses = {
  /**
   * OK
   */
  200: TestingSession;
};

export type PostTestingSessionsCreateWithPermissionsResponse = PostTestingSessionsCreateWithPermissionsResponses[keyof PostTestingSessionsCreateWithPermissionsResponses];

export type DeleteTestingSessionsByIdDeleteWithPermissionsData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    tenantId?: string;
  };
  url: '/testing/sessions/{id}/delete-with-permissions';
};

export type DeleteTestingSessionsByIdDeleteWithPermissionsResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetTestingPermissionsUsersWithRoleByRoleNameData = {
  body?: never;
  path: {
    roleName: string;
  };
  query?: {
    tenantId?: string;
  };
  url: '/testing/permissions/users-with-role/{roleName}';
};

export type GetTestingPermissionsUsersWithRoleByRoleNameResponses = {
  /**
   * OK
   */
  200: Array<UserRoleAssignment>;
};

export type GetTestingPermissionsUsersWithRoleByRoleNameResponse = GetTestingPermissionsUsersWithRoleByRoleNameResponses[keyof GetTestingPermissionsUsersWithRoleByRoleNameResponses];

export type GetApiUsersByUserIdAchievementsData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    pageNumber?: number;
    pageSize?: number;
    category?: string;
    type?: string;
    isCompleted?: boolean;
    earnedAfter?: string;
    earnedBefore?: string;
    orderBy?: string;
    descending?: boolean;
  };
  url: '/api/users/{userId}/achievements';
};

export type GetApiUsersByUserIdAchievementsResponses = {
  /**
   * OK
   */
  200: UserAchievementsPageDto;
};

export type GetApiUsersByUserIdAchievementsResponse = GetApiUsersByUserIdAchievementsResponses[keyof GetApiUsersByUserIdAchievementsResponses];

export type GetApiUsersByUserIdAchievementsProgressData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    category?: string;
    onlyInProgress?: boolean;
  };
  url: '/api/users/{userId}/achievements/progress';
};

export type GetApiUsersByUserIdAchievementsProgressResponses = {
  /**
   * OK
   */
  200: Array<AchievementProgressDto>;
};

export type GetApiUsersByUserIdAchievementsProgressResponse = GetApiUsersByUserIdAchievementsProgressResponses[keyof GetApiUsersByUserIdAchievementsProgressResponses];

export type GetApiUsersByUserIdAchievementsSummaryData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    recentLimit?: number;
    nearCompletionThreshold?: number;
  };
  url: '/api/users/{userId}/achievements/summary';
};

export type GetApiUsersByUserIdAchievementsSummaryResponses = {
  /**
   * OK
   */
  200: UserAchievementSummaryDto;
};

export type GetApiUsersByUserIdAchievementsSummaryResponse = GetApiUsersByUserIdAchievementsSummaryResponses[keyof GetApiUsersByUserIdAchievementsSummaryResponses];

export type GetApiUsersByUserIdAchievementsAvailableData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    pageNumber?: number;
    pageSize?: number;
    category?: string;
    onlyEligible?: boolean;
  };
  url: '/api/users/{userId}/achievements/available';
};

export type GetApiUsersByUserIdAchievementsAvailableResponses = {
  /**
   * OK
   */
  200: AchievementsPageDto;
};

export type GetApiUsersByUserIdAchievementsAvailableResponse = GetApiUsersByUserIdAchievementsAvailableResponses[keyof GetApiUsersByUserIdAchievementsAvailableResponses];

export type PostApiUsersByUserIdAchievementsByAchievementIdProgressData = {
  body?: UpdateAchievementProgressRequest;
  path: {
    userId: string;
    achievementId: string;
  };
  query?: never;
  url: '/api/users/{userId}/achievements/{achievementId}/progress';
};

export type PostApiUsersByUserIdAchievementsByAchievementIdProgressResponses = {
  /**
   * OK
   */
  200: AchievementProgress;
};

export type PostApiUsersByUserIdAchievementsByAchievementIdProgressResponse = PostApiUsersByUserIdAchievementsByAchievementIdProgressResponses[keyof PostApiUsersByUserIdAchievementsByAchievementIdProgressResponses];

export type GetApiUsersByUserIdAchievementsByAchievementIdPrerequisitesData = {
  body?: never;
  path: {
    userId: string;
    achievementId: string;
  };
  query?: never;
  url: '/api/users/{userId}/achievements/{achievementId}/prerequisites';
};

export type GetApiUsersByUserIdAchievementsByAchievementIdPrerequisitesResponses = {
  /**
   * OK
   */
  200: AchievementPrerequisiteCheckDto;
};

export type GetApiUsersByUserIdAchievementsByAchievementIdPrerequisitesResponse = GetApiUsersByUserIdAchievementsByAchievementIdPrerequisitesResponses[keyof GetApiUsersByUserIdAchievementsByAchievementIdPrerequisitesResponses];

export type PostApiUsersByUserIdAchievementsByUserAchievementIdMarkNotifiedData = {
  body?: never;
  path: {
    userId: string;
    userAchievementId: string;
  };
  query?: never;
  url: '/api/users/{userId}/achievements/{userAchievementId}/mark-notified';
};

export type PostApiUsersByUserIdAchievementsByUserAchievementIdMarkNotifiedResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type DeleteApiUsersByUserIdAchievementsByUserAchievementIdData = {
  body?: RevokeAchievementRequest;
  path: {
    userId: string;
    userAchievementId: string;
  };
  query?: never;
  url: '/api/users/{userId}/achievements/{userAchievementId}';
};

export type DeleteApiUsersByUserIdAchievementsByUserAchievementIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiUserprofilesData = {
  body?: never;
  path?: never;
  query?: {
    includeDeleted?: boolean;
    skip?: number;
    take?: number;
    searchTerm?: string;
    tenantId?: string;
  };
  url: '/api/userprofiles';
};

export type GetApiUserprofilesResponses = {
  /**
   * OK
   */
  200: Array<UserProfileResponseDto>;
};

export type GetApiUserprofilesResponse = GetApiUserprofilesResponses[keyof GetApiUserprofilesResponses];

export type PostApiUserprofilesData = {
  body?: CreateUserProfileDto;
  path?: never;
  query?: never;
  url: '/api/userprofiles';
};

export type PostApiUserprofilesResponses = {
  /**
   * OK
   */
  200: UserProfileResponseDto;
};

export type PostApiUserprofilesResponse = PostApiUserprofilesResponses[keyof PostApiUserprofilesResponses];

export type DeleteApiUserprofilesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    permanent?: boolean;
  };
  url: '/api/userprofiles/{id}';
};

export type DeleteApiUserprofilesByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiUserprofilesByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/userprofiles/{id}';
};

export type GetApiUserprofilesByIdResponses = {
  /**
   * OK
   */
  200: UserProfileResponseDto;
};

export type GetApiUserprofilesByIdResponse = GetApiUserprofilesByIdResponses[keyof GetApiUserprofilesByIdResponses];

export type PutApiUserprofilesByIdData = {
  body?: UpdateUserProfileDto;
  headers?: {
    'If-Match'?: number;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/api/userprofiles/{id}';
};

export type PutApiUserprofilesByIdResponses = {
  /**
   * OK
   */
  200: UserProfileResponseDto;
};

export type PutApiUserprofilesByIdResponse = PutApiUserprofilesByIdResponses[keyof PutApiUserprofilesByIdResponses];

export type GetApiUserprofilesUserByUserIdData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/userprofiles/user/{userId}';
};

export type GetApiUserprofilesUserByUserIdResponses = {
  /**
   * OK
   */
  200: UserProfileResponseDto;
};

export type GetApiUserprofilesUserByUserIdResponse = GetApiUserprofilesUserByUserIdResponses[keyof GetApiUserprofilesUserByUserIdResponses];

export type PostApiUserprofilesByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/userprofiles/{id}/restore';
};

export type PostApiUserprofilesByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiUsersData = {
  body?: never;
  path?: never;
  query?: {
    includeDeleted?: boolean;
    skip?: number;
    take?: number;
    isActive?: boolean;
  };
  url: '/api/users';
};

export type GetApiUsersResponses = {
  /**
   * OK
   */
  200: Array<UserResponseDto>;
};

export type GetApiUsersResponse = GetApiUsersResponses[keyof GetApiUsersResponses];

export type PostApiUsersData = {
  body?: CreateUserDto;
  path?: never;
  query?: never;
  url: '/api/users';
};

export type PostApiUsersResponses = {
  /**
   * OK
   */
  200: UserResponseDto;
};

export type PostApiUsersResponse = PostApiUsersResponses[keyof PostApiUsersResponses];

export type DeleteApiUsersByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    softDelete?: boolean;
    reason?: string;
  };
  url: '/api/users/{id}';
};

export type DeleteApiUsersByIdResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type GetApiUsersByIdData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    includeDeleted?: boolean;
  };
  url: '/api/users/{id}';
};

export type GetApiUsersByIdResponses = {
  /**
   * OK
   */
  200: UserResponseDto;
};

export type GetApiUsersByIdResponse = GetApiUsersByIdResponses[keyof GetApiUsersByIdResponses];

export type PutApiUsersByIdData = {
  body?: UpdateUserDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/users/{id}';
};

export type PutApiUsersByIdResponses = {
  /**
   * OK
   */
  200: UserResponseDto;
};

export type PutApiUsersByIdResponse = PutApiUsersByIdResponses[keyof PutApiUsersByIdResponses];

export type PostApiUsersByIdRestoreData = {
  body?: never;
  path: {
    id: string;
  };
  query?: {
    reason?: string;
  };
  url: '/api/users/{id}/restore';
};

export type PostApiUsersByIdRestoreResponses = {
  /**
   * OK
   */
  200: unknown;
};

export type PutApiUsersByIdBalanceData = {
  body?: UpdateUserBalanceDto;
  path: {
    id: string;
  };
  query?: never;
  url: '/api/users/{id}/balance';
};

export type PutApiUsersByIdBalanceResponses = {
  /**
   * OK
   */
  200: UserResponseDto;
};

export type PutApiUsersByIdBalanceResponse = PutApiUsersByIdBalanceResponses[keyof PutApiUsersByIdBalanceResponses];

export type GetApiUsersStatisticsData = {
  body?: never;
  path?: never;
  query?: {
    fromDate?: string;
    toDate?: string;
    includeDeleted?: boolean;
  };
  url: '/api/users/statistics';
};

export type GetApiUsersStatisticsResponses = {
  /**
   * OK
   */
  200: UserStatistics;
};

export type GetApiUsersStatisticsResponse = GetApiUsersStatisticsResponses[keyof GetApiUsersStatisticsResponses];

export type GetApiUsersSearchData = {
  body?: never;
  path?: never;
  query?: {
    searchTerm?: string;
    isActive?: boolean;
    minBalance?: number;
    maxBalance?: number;
    createdAfter?: string;
    createdBefore?: string;
    includeDeleted?: boolean;
    skip?: number;
    take?: number;
    sortBy?: UserSortField;
    sortDirection?: SortDirection;
  };
  url: '/api/users/search';
};

export type GetApiUsersSearchResponses = {
  /**
   * OK
   */
  200: UserResponseDtoPagedResult;
};

export type GetApiUsersSearchResponse = GetApiUsersSearchResponses[keyof GetApiUsersSearchResponses];

export type PostApiUsersBulkData = {
  body?: Array<CreateUserDto>;
  path?: never;
  query?: {
    reason?: string;
  };
  url: '/api/users/bulk';
};

export type PostApiUsersBulkResponses = {
  /**
   * OK
   */
  200: BulkOperationResult;
};

export type PostApiUsersBulkResponse = PostApiUsersBulkResponses[keyof PostApiUsersBulkResponses];

export type PatchApiUsersBulkActivateData = {
  body?: Array<string>;
  path?: never;
  query?: {
    reason?: string;
  };
  url: '/api/users/bulk/activate';
};

export type PatchApiUsersBulkActivateResponses = {
  /**
   * OK
   */
  200: BulkOperationResult;
};

export type PatchApiUsersBulkActivateResponse = PatchApiUsersBulkActivateResponses[keyof PatchApiUsersBulkActivateResponses];

export type PatchApiUsersBulkDeactivateData = {
  body?: Array<string>;
  path?: never;
  query?: {
    reason?: string;
  };
  url: '/api/users/bulk/deactivate';
};

export type PatchApiUsersBulkDeactivateResponses = {
  /**
   * OK
   */
  200: BulkOperationResult;
};

export type PatchApiUsersBulkDeactivateResponse = PatchApiUsersBulkDeactivateResponses[keyof PatchApiUsersBulkDeactivateResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
