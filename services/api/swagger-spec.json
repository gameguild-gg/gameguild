{
  "openapi": "3.0.0",
  "paths": {
    "/auth/test": {
      "get": {
        "operationId": "AuthController_test",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/magic-link": {
      "post": {
        "operationId": "AuthController_magicLink",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/local/sign-in": {
      "post": {
        "operationId": "AuthController_localSignWithEmailOrUsername",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalSignInDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/local/sign-up": {
      "post": {
        "operationId": "AuthController_signUpWithEmailUsernamePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalSignUpDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalSignInResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/google/callback/{token}": {
      "get": {
        "operationId": "AuthController_signInWithGoogle",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalSignInResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/web3/sign-in/challenge": {
      "post": {
        "operationId": "AuthController_getWeb3SignInChallenge",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EthereumSigninChallengeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EthereumSigninChallengeResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/web3/sign-in/validate": {
      "post": {
        "operationId": "AuthController_validateWeb3SignInChallenge",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EthereumSigninValidateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalSignInResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/current-user": {
      "get": {
        "operationId": "AuthController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/userExists/{user}": {
      "get": {
        "operationId": "AuthController_userExists",
        "parameters": [
          {
            "name": "user",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/content/course/create": {
      "post": {
        "operationId": "ContentController_createEmptyCourse",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseEntity"
                }
              }
            }
          }
        },
        "tags": [
          "content"
        ]
      }
    },
    "/game": {
      "post": {
        "operationId": "createOneBaseGameControllerGameEntity",
        "summary": "Create a single GameEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game"
        ]
      },
      "get": {
        "operationId": "getManyBaseGameControllerGameEntity",
        "summary": "Retrieve multiple GameEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyGameEntityResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GameEntity"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "game"
        ]
      }
    },
    "/game/{id}": {
      "patch": {
        "operationId": "updateOneBaseGameControllerGameEntity",
        "summary": "Update a single GameEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game"
        ]
      },
      "get": {
        "operationId": "getOneBaseGameControllerGameEntity",
        "summary": "Retrieve a single GameEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game"
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseGameControllerGameEntity",
        "summary": "Delete a single GameEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "game"
        ]
      }
    },
    "/game-version": {
      "post": {
        "operationId": "createOneBaseGameVersionControllerGameVersionEntity",
        "summary": "Create a single GameVersionEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameVersionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game-version"
        ]
      },
      "get": {
        "operationId": "getManyBaseGameVersionControllerGameVersionEntity",
        "summary": "Retrieve multiple GameVersionEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyGameVersionEntityResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GameVersionEntity"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "game-version"
        ]
      }
    },
    "/game-version/{id}": {
      "patch": {
        "operationId": "updateOneBaseGameVersionControllerGameVersionEntity",
        "summary": "Update a single GameVersionEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game-version"
        ]
      },
      "get": {
        "operationId": "getOneBaseGameVersionControllerGameVersionEntity",
        "summary": "Retrieve a single GameVersionEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionEntity"
                }
              }
            }
          }
        },
        "tags": [
          "game-version"
        ]
      },
      "delete": {
        "operationId": "deleteOneBaseGameVersionControllerGameVersionEntity",
        "summary": "Delete a single GameVersionEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response"
          }
        },
        "tags": [
          "game-version"
        ]
      }
    },
    "/Competitions/Chess/submit": {
      "post": {
        "operationId": "CompetitionController_submitChessAgent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CompetitionSubmissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TerminalDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/ListAgents": {
      "get": {
        "operationId": "CompetitionController_ListChessAgents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/Move": {
      "post": {
        "operationId": "CompetitionController_RequestChessMove",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChessMoveRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/RunMatch": {
      "post": {
        "operationId": "CompetitionController_RunChessMatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChessMatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChessMatchResultDto"
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/FindMatches": {
      "post": {
        "operationId": "CompetitionController_FindChessMatchResult",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchSearchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatchSearchResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/Match/{id}": {
      "get": {
        "operationId": "CompetitionController_GetChessMatchResult",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChessMatchResultDto"
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/Leaderboard": {
      "get": {
        "operationId": "CompetitionController_GetChessLeaderboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChessLeaderboardResponseEntryDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/RunCompetition": {
      "get": {
        "operationId": "CompetitionController_RunCompetition",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "competitions"
        ]
      }
    },
    "/Competitions/Chess/LatestCompetitionReport": {
      "get": {
        "operationId": "CompetitionController_GetLatestChessCompetitionReport",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompetitionRunSubmissionReportDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "competitions"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "EmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "OkDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "LocalSignInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "username"
        ]
      },
      "LocalSignUpDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "bio",
          "name",
          "givenName",
          "familyName",
          "picture"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string"
          },
          "passwordSalt": {
            "type": "string"
          },
          "facebookId": {
            "type": "string"
          },
          "googleId": {
            "type": "string"
          },
          "githubId": {
            "type": "string"
          },
          "appleId": {
            "type": "string"
          },
          "linkedinId": {
            "type": "string"
          },
          "twitterId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "elo": {
            "type": "number"
          },
          "profile": {
            "$ref": "#/components/schemas/UserProfileDto"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "username",
          "email",
          "emailVerified",
          "passwordHash",
          "passwordSalt",
          "facebookId",
          "googleId",
          "githubId",
          "appleId",
          "linkedinId",
          "twitterId",
          "walletAddress",
          "elo",
          "profile"
        ]
      },
      "LocalSignInResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ]
      },
      "EthereumSigninChallengeRequestDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "EthereumSigninChallengeResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "EthereumSigninValidateRequestDto": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        },
        "required": [
          "address",
          "signature"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string"
          },
          "passwordSalt": {
            "type": "string"
          },
          "facebookId": {
            "type": "string"
          },
          "googleId": {
            "type": "string"
          },
          "githubId": {
            "type": "string"
          },
          "appleId": {
            "type": "string"
          },
          "linkedinId": {
            "type": "string"
          },
          "twitterId": {
            "type": "string"
          },
          "walletAddress": {
            "type": "string"
          },
          "elo": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "username",
          "email",
          "emailVerified",
          "passwordHash",
          "passwordSalt",
          "facebookId",
          "googleId",
          "githubId",
          "appleId",
          "linkedinId",
          "twitterId",
          "walletAddress",
          "elo"
        ]
      },
      "LectureEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "slug",
          "title",
          "summary"
        ]
      },
      "ChapterEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "slug",
          "title",
          "summary"
        ]
      },
      "CourseEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "subscriptionAccess": {
            "type": "boolean"
          },
          "author": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "lectures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LectureEntity"
            }
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterEntity"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "slug",
          "title",
          "summary",
          "price",
          "subscriptionAccess",
          "author",
          "lectures",
          "chapters"
        ]
      },
      "PermissionsDto": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "editors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "owner",
          "editors"
        ]
      },
      "GameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "DRAFT",
              "PUBLISHED",
              "FUTURE",
              "PENDING",
              "PRIVATE",
              "TRASH"
            ],
            "default": "DRAFT"
          },
          "thumbnail": {
            "type": "string"
          },
          "roles": {
            "$ref": "#/components/schemas/PermissionsDto"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionDto"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "slug",
          "title",
          "summary",
          "body",
          "visibility",
          "thumbnail",
          "roles",
          "versions"
        ]
      },
      "GameFeedbackResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/GameVersionDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "version",
          "user"
        ]
      },
      "GameVersionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "archive_url": {
            "type": "string"
          },
          "notes_url": {
            "type": "string"
          },
          "feedback_form": {
            "type": "string"
          },
          "feedback_deadline": {
            "format": "date-time",
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/GameDto"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameFeedbackResponseDto"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "version",
          "archive_url",
          "notes_url",
          "feedback_form",
          "feedback_deadline",
          "game",
          "responses"
        ]
      },
      "GetManyGameEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameEntity"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "GameEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "roles": {
            "$ref": "#/components/schemas/PermissionsDto"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionDto"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "slug",
          "title",
          "summary",
          "roles",
          "versions"
        ]
      },
      "GetManyGameVersionEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionEntity"
            }
          },
          "count": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "count",
          "total",
          "page",
          "pageCount"
        ]
      },
      "GameFeedbackResponseEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/GameVersionEntity"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "version",
          "user"
        ]
      },
      "GameVersionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "archive_url": {
            "type": "string"
          },
          "notes_url": {
            "type": "string"
          },
          "feedback_form": {
            "type": "string"
          },
          "feedback_deadline": {
            "format": "date-time",
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/GameEntity"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameFeedbackResponseEntity"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "version",
          "archive_url",
          "notes_url",
          "feedback_form",
          "feedback_deadline",
          "game",
          "responses"
        ]
      },
      "CompetitionSubmissionDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ]
      },
      "TerminalDto": {
        "type": "object",
        "properties": {}
      },
      "ChessMoveRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "fen": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "fen"
        ]
      },
      "ChessMatchRequestDto": {
        "type": "object",
        "properties": {
          "player1username": {
            "type": "string"
          },
          "player2username": {
            "type": "string"
          }
        },
        "required": [
          "player1username",
          "player2username"
        ]
      },
      "ChessMatchResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "moves": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "winner": {
            "type": "string"
          },
          "draw": {
            "type": "boolean"
          },
          "result": {
            "type": "string",
            "enum": [
              "GAME_OVER",
              "DRAW",
              "NONE"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "CHECKMATE",
              "STALEMATE",
              "INSUFFICIENT_MATERIAL",
              "FIFTY_MOVE_RULE",
              "THREEFOLD_REPETITION",
              "INVALID_MOVE",
              "NONE"
            ]
          },
          "cpuTime": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "finalFen": {
            "type": "string"
          },
          "eloChange": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "elo": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "players",
          "moves",
          "winner",
          "draw",
          "result",
          "reason",
          "cpuTime",
          "finalFen",
          "eloChange",
          "elo",
          "createdAt"
        ]
      },
      "MatchSearchRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "pageSize": {
            "type": "number",
            "default": 100
          },
          "pageId": {
            "type": "number",
            "default": 0
          }
        },
        "required": [
          "username",
          "pageSize",
          "pageId"
        ]
      },
      "MatchSearchResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "winner": {
            "type": "string"
          },
          "lastState": {
            "type": "string"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "winner",
          "lastState",
          "players"
        ]
      },
      "ChessLeaderboardResponseEntryDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "elo": {
            "type": "number"
          }
        },
        "required": [
          "username",
          "elo"
        ]
      },
      "CompetitionRunSubmissionReportDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "winsAsP1": {
            "type": "number"
          },
          "winsAsP2": {
            "type": "number"
          },
          "totalWins": {
            "type": "number"
          },
          "pointsAsP1": {
            "type": "number"
          },
          "pointsAsP2": {
            "type": "number"
          },
          "totalPoints": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "winsAsP1",
          "winsAsP2",
          "totalWins",
          "pointsAsP1",
          "pointsAsP2",
          "totalPoints",
          "user"
        ]
      }
    }
  }
}