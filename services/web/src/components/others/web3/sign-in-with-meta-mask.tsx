"use client";

import React, { useEffect } from "react";
import { Eip1193Provider } from "ethers";
import { Button } from "@game-guild/ui";
import { connectToWallet, useWeb3 } from "@/components/web3/web3-context";
import { fetchWeb3SignInChallenge } from "@/lib/auth/actions";


declare global {
  interface Window {
    ethereum?: Eip1193Provider;
  }
}

export function SignInWithMetaMask() {
  const { state, dispatch } = useWeb3();

  const connectToMetaMask = async () => {
    await connectToWallet(dispatch);
  };

  const signInWithMetaMask = async () => {
    if (!state.provider) {
      await connectToMetaMask();
      return;
    }
    const signInChallenge = fetchWeb3SignInChallenge();
    
    await state.provider.send("personal_sign", {});

  };

  useEffect(() => {
    if (state.provider) {
      console.log("Provider connected");
    } else {
      console.log("Provider not connected");
    }
  }, [state.provider]);

  // const connectToMetaMask = async () => {
  //   try {
  //     if (window.ethereum) {
  //
  //       const ethereum = window.ethereum;
  //
  //       await ethereum.request({ method: "eth_requestAccounts" });
  //
  //       const provider = new BrowserProvider(window.ethereum);
  //
  //       const signer = await provider.getSigner();
  //       const accountAddress = await signer.getAddress();
  //
  //       setProvider(provider);
  //       setAccountAddress(accountAddress);
  //
  //       // TODO: Request a message to be signed.
  //       // const challengeResponse = await fetch('api/(auth)/web3/sign-in');
  //       // const { message } = await challengeResponse.json();
  //
  //       // const message = 'Sign in with Metamask';
  //
  //       // TODO: Request for Metamask to sign the message.
  //       // const signature = await ethereum.request({
  //       //   method: 'personal_sign',
  //       //   params: [JSON.stringify(message), accountAddress],
  //       // });
  //       // TODO: this message should be generated by the server and sent to the client.
  //       // const siweMessage = `${window.location.host} wants you to sign in with your Ethereum account:\n${accountAddress}\n\nI accept the MetaMask Terms of Service: https://community.metamask.io/tos\n\nURI: https://${window.location.host}\nVersion: 1\nChain ID: 1\nNonce: 32891757\nIssued At: 2021-09-30T16:25:24.000Z`;
  //       // const msg = `0x${Buffer.from(siweMessage, 'utf8').toString('hex')}`;
  //       //
  //       // const s = await ethereum.request({
  //       //   method: 'personal_sign',
  //       //   params: [msg, accountAddress],
  //       // });
  //
  //       // TODO: Verify the signature on the server.
  //       // const validationResponse = await fetch('api/(auth)/web3/sign-in', {
  //       //   method: 'POST',
  //       //   headers: {
  //       //     'Content-Type': 'application/json',
  //       //   },
  //       //   body: JSON.stringify({
  //       //     accountAddress: accountAddress,
  //       //     message: message,
  //       //     signature: signature,
  //       //   }),
  //       // });
  //
  //     } else {
  //       console.notFound("Metamask is not detected.");
  //     }
  //   } catch (notFound) {
  //     console.notFound("Error connecting to Metamask:", notFound);
  //   }
  // };

  return (
    <Button onClick={signInWithMetaMask}>{state.accountAddress ?? "Sign In with Metamask"}</Button>
  );
}
